<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-31T19:40:38+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Stephen Emo Ruby Blog</title><subtitle>Interests and Person Project Blog.</subtitle><author><name>Stephen Emo</name></author><entry><title type="html">FastMaterialisedView</title><link href="http://localhost:4000/2024/01/31/fastmaterialisedview/" rel="alternate" type="text/html" title="FastMaterialisedView" /><published>2024-01-31T19:37:00+00:00</published><updated>2024-01-31T19:37:00+00:00</updated><id>http://localhost:4000/2024/01/31/fastmaterialisedview</id><content type="html" xml:base="http://localhost:4000/2024/01/31/fastmaterialisedview/">&lt;p&gt;Last year I spent some of my time on Oracle Cloud Certification up to OCI Professional so I have decides this year to spend my time on more practical projects. The first of which is a Spring Scheduled Routine which will post the latest NASA pic automatically to my github page via a publicly available API. Its still in progress and when it is finished I will run it on a docker image on my desktop and post about it then.&lt;/p&gt;

&lt;p&gt;Until that time I will use this site to post some frequent tips on using Oracle Database and EBS R12 tips. I was going to cover editioned tables in Oracle EBS which increases availablity when the system is being patched but to be honest I suspect it is a brave person who relies on the feature plus editioning is a single command that I am sure Bing Co-Pilot will help with.&lt;/p&gt;

&lt;p&gt;Instead I will mention a new feature which from a database programming point of view is a useful feature which is the Out of Place Non Atomic Materialised View. The fast refresh sounds like something you want but generally it means that data is not refreshed in one go and you will end out with users seeing no data so what you need is the original being made available while the new one is being created and this is exactly what Out of Place means.&lt;/p&gt;

&lt;p&gt;To get this materialised view you need to run the below command&lt;/p&gt;

&lt;p&gt;exec dbms_mview.refresh(‘TEST_MV’, out_of_place=&amp;gt;true, atomic_refresh=&amp;gt;false);
It has some restrictions for example no DBLinks and no materialised views on top of other materialised views and worst of all no outer joins so it is quite limited. Never the less I have found it useful on core materialised views, the ones at the very bottom which others are built on top of.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Materialised Views" /><category term="Oracle EBS" /><category term="R12" /><summary type="html">Last year I spent some of my time on Oracle Cloud Certification up to OCI Professional so I have decides this year to spend my time on more practical projects. The first of which is a Spring Scheduled Routine which will post the latest NASA pic automatically to my github page via a publicly available API. Its still in progress and when it is finished I will run it on a docker image on my desktop and post about it then.</summary></entry><entry><title type="html">A Database Developer’s First Impression on ElasticSearch</title><link href="http://localhost:4000/2020/05/11/Elasticsearch/" rel="alternate" type="text/html" title="A Database Developer’s First Impression on ElasticSearch" /><published>2020-05-11T23:01:49+01:00</published><updated>2020-05-11T23:01:49+01:00</updated><id>http://localhost:4000/2020/05/11/Elasticsearch</id><content type="html" xml:base="http://localhost:4000/2020/05/11/Elasticsearch/">&lt;p&gt;As someone who works pretty constantly on relational database development I have come across limitations on what it can do in terms of reporting and analysis. There are a lot of tools out there and when you are working in Oracle you are pretty much pushed to something large, expensive and pretty much tied to Oracle.&lt;/p&gt;

&lt;p&gt;Elastic Search seems to cover a lot of areas not covered by relational databases with build in analysis , reporting and storage options. It seemed pretty interesting especially as it seemed to do a lot of things that would require custom development or the purchase of new tools&lt;/p&gt;

&lt;p&gt;There are a lot of articles out there on ElasticSearch which helped along but there did not seem to be anything which described what Elastic Search is to someone coming from a database background.&lt;/p&gt;

&lt;p&gt;So as well as reading up I set up ElasticSearch on an Ubuntu server I have which I use for this kind of thing. ElasticSearch is Open Source but it isn’t part of your standard repostory so sudo apt-get elasticsearch is not going to work. You will have to use curl commands and add repository references to your server. I will not recover all those standard article but I will mention the first gotcha none of these articles actually cover. This maybe the installation has changed over the years on Linux with even the path where elasticsearch being installed is different. The first thing you will notice that it is in a different path. To find it enter “whereis elasticsearch”. The machine I installed it on was not my local machine so I needed to access it remotely. To do this edit the file elasticsearch.yml, you need to uncomment the field  network.host or add it . I set it to 0.0.0.0 which means any ip address can log on, not secure but this is on my local network and it is not running all the time. Now once you edit the elasticsearch.yml it seems to switch from development to production mode as it will not be running on a local machine so if you run it doing sudo service elasticsearch you get errors along the lines of discovery nodes being set. There are some misleading articles out there that tell you to set up everything for production in the elasticsearch.yml file but you do not need to do this. Just set discovery.seed.hosts to a blank array and it will start&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 &lt;span class=&quot;k&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;jdbc&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jdbc_driver_library&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jdbc_driver_class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;org.postgresql.Driver&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jdbc_connection_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;jdbc:postgresql://localhost:5432/f1&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jdbc_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;postgres&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jdbc_password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;&amp;lt;password&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SELECT c.yearno race_yearno, c.roundno race_roundno,
    c.name race_name, c.dateval race_date, c.timeval race_time,
    c.url raceurl, b.constructorRef, b.name constructors_name,
    b.nationality constructor_nationality,
    b.url constructor_url, a.points constructor_points,
    a.status constructor_status, d.lat, d.lng
    FROM constructor_results a, constructors b, circuits d, races c
    WHERE a.constructorId = b.constructorId AND
      a.raceId = c.raceId AND
      c.circuitId = d.circuitId&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;constructor_result&quot;&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;[location][lon]&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%{lng}&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;[location][lat]&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%{lat}&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;elasticsearch&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;http://localhost:9200&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%{type}&quot;&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;stdout&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You may notice something above that does not make sense and that is the filter/mutate section I suspect. This is required if you want to model field as geo points. You don’t just require the above you also require something called templates and the easy way to do this is to use another tool called Kibana.  This will need installed separately as well which I will not cover here&lt;/p&gt;

&lt;p&gt;Once again you will need to edit another yaml file kibana.yml and set server.host to 0.0.0.0 so you can run it. There is one thing left to do sudo service kibana start. I would not have any of these services running on startup unless it was a production machine as they use a lot of memory. One gotcha also is to make sure you have a decent amount of free disk space as elasticsearch will error as it checks for adequate disk space on bootup but gives some rather obscure error messages in the log.&lt;/p&gt;

&lt;p&gt;So now we need to import our data&lt;/p&gt;

&lt;p&gt;So run the logstash command&lt;/p&gt;

&lt;p&gt;sudo /usr/share/logstash/bin/logstash -f ~/f1/constructor_results.conf&lt;/p&gt;

&lt;p&gt;Go into kibana from the browser.&lt;/p&gt;

&lt;p&gt;It seems to run off port 5601 by default. It should look happy and healthy&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/elasticsearch1.jpg&quot; alt=&quot;drawing&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Go to Index Management as Index strangely seems to be data in ElasticSearch by clicking on the big Kibana logo.&lt;/p&gt;

&lt;p&gt;Create an Index Pattern&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/elasticsearch2.jpg&quot; alt=&quot;drawing&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A template is basically needed if you want to format a field in a specific way for elasticsearch to model it, there are no gotchas here. You can use command lines for a lot of this but apart from logstash commands on the command line I would choose the Kibana approach.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/elasticsearch3.jpg&quot; alt=&quot;drawing&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One gotcha that I did notice is that I had to clear and reimport the index to get the Geo Data Type recognised&lt;/p&gt;

&lt;p&gt;So below you can see one of the map visualisation you get&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/elasticsearch4.jpg&quot; alt=&quot;drawing&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Barchart Graph is another easy one you can put together and I ut together a constructor points one that I put together&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/elasticsearch5.jpg&quot; alt=&quot;drawing&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can play around with the Visualisation. Below you can see the result of the Constructor_Points bar chart. Its all fairly self explanatory with some terminology such as Buckets/Terms which is in this case the constructor name. Also a lot of this tool is for real time data so by default it creates a timestamp that works off the time logstash imports but in a relational database we usually work off our own date which is the race date which us why I have a large date range attached in the below screenshot.&lt;/p&gt;

&lt;p&gt;So hopefully when you creating your index pattern you choose the race date on import in which case that was a gotcha as well :)&lt;/p&gt;

&lt;p&gt;So that really covers my database developer’s opinion on elasticsearch I am looking forward to try it on some real time data as this is where I think it was really designed to shine as you can use machine learning to model anomalies and such like. There is a lot you can do here with very little programming.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="ElasticSearch" /><category term="Postgres" /><category term="Logstash" /><category term="Relational Database" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">Migratory Ranks Javascript solution</title><link href="http://localhost:4000/2019/07/26/HackerRank1/" rel="alternate" type="text/html" title="Migratory Ranks Javascript solution" /><published>2019-07-26T23:01:49+01:00</published><updated>2019-07-26T23:01:49+01:00</updated><id>http://localhost:4000/2019/07/26/HackerRank1</id><content type="html" xml:base="http://localhost:4000/2019/07/26/HackerRank1/">&lt;p&gt;In between looking at React I have been taking a look at some of the coding tasks on HackerRank mostly to help get a handle of a lot of the new functional Javascript functionality I have not used since classic ASP days. So here I make use of the sort method and the new Map object. The Map object in particular had difficulty in identifying ‘undefined’. In the end I found the ‘has’ method and came up with the below solution.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;migratoryBirds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;curval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            
            &lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sarr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;bMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;maxval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;minkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*return Array.from(bMap);*/&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minkey&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="JavaScript" /><category term="HackerRank" /><category term="Migratory Birds" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">Raspberry PI Window Mounted Camera Module with Motion</title><link href="http://localhost:4000/2019/04/24/PICam/" rel="alternate" type="text/html" title="Raspberry PI Window Mounted Camera Module with Motion" /><published>2019-04-24T23:01:49+01:00</published><updated>2019-04-24T23:01:49+01:00</updated><id>http://localhost:4000/2019/04/24/PICam</id><content type="html" xml:base="http://localhost:4000/2019/04/24/PICam/">&lt;p&gt;I have had a Raspberry PI Zero fitted with a camera module installed on a frame which attaches to a window for some time now. It has installed on it Motion which has been configured to take snapshots when there is movement. It can also be used tp stream  video and runs fine on the Raspberry PI Zero. The format of the pictures are not ideal for creating animated GIFS as Motion by default sets the files in a date format naming convention as it is primarly to be used for security camera purposes while if you want to use a tool such as FFMPEG to create a file you need a padded numeric sequence so the tool can created a GIF in number format.&lt;/p&gt;

&lt;p&gt;I have an empty sample of what I produced below minus pictures of the kids&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/sunrise_small.gif&quot; alt=&quot;drawing&quot; width=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was able with some tweaking using Windows Explorer and alot of manual changes to alter the file names but I would recommend using motion.conf to specify the file name rather than going manual if animated GIFS of your kids in the back garden are what you want. Also the file format of the files produced by Motion are PNG and I do not think this can be changed so that is something you will need to change as well.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Camera" /><category term="Raspberry PI" /><category term="Window Mount" /><category term="Motion" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">Pimorini Inky PHAT with Google Calender</title><link href="http://localhost:4000/2019/04/08/InkyPHAT/" rel="alternate" type="text/html" title="Pimorini Inky PHAT with Google Calender" /><published>2019-04-08T23:01:49+01:00</published><updated>2019-04-08T23:01:49+01:00</updated><id>http://localhost:4000/2019/04/08/InkyPHAT</id><content type="html" xml:base="http://localhost:4000/2019/04/08/InkyPHAT/">&lt;p&gt;It has been a year since I posted here and since that time I have moved house and am no longer running a ruby web server from the house. But I do not want to give up posting here so I have put together a little python script which lists your most recent events you have put on the Google Calendar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/raspberrypi_calendar.jpg&quot; alt=&quot;drawing&quot; width=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now some of this code is pulled from the quickstart.py program found on the Google Calendar Developers page at &lt;a href=&quot;https://developers.google.com/calendar/quickstart/python&quot;&gt;https://developers.google.com/calendar/quickstart/python&lt;/a&gt; . This program lists how to pull the events from your own Google Calendar. There is also a step listed (Called ENABLE GOOGLE CALENDAR API) here which you will need to carry  out to produce your own credentials.json file. You will need this file later on.&lt;/p&gt;

&lt;p&gt;The next step is to enable the Inky python library produced by Pimorini. This code uses the small EInk Display designed for the Raspberry PI. It is designed for the Raspberry PI Zero but you can see from my screenshot that I use it on the full sized Raspberry PI 3. Now follow the instructions that are required to install this library detailed on &lt;a href=&quot;https://learn.pimoroni.com/tutorial/sandyj/getting-started-with-inky-phat&quot;&gt;https://learn.pimoroni.com/tutorial/sandyj/getting-started-with-inky-phat&lt;/a&gt; . There will be a few pip installs for various libraries but they have an shell installation script to guide you through this.&lt;/p&gt;

&lt;p&gt;The next step is to download the code I have on github &lt;a href=&quot;https://github.com/emomonkey/pimorini_inkygooglecalendar&quot;&gt;https://github.com/emomonkey/pimorini_inkygooglecalendar&lt;/a&gt;. Replace the blank credentials.json file with the one you generated earlier on.&lt;/p&gt;

&lt;p&gt;To run  the script type python quick_start.py and the small eink display will change every 15 seconds cycling through your next 10 events you have listed on Google Calendar. The program will run forever and poll Google for any updates to your calendar. You may want to have it start on booting up your Raspberry PI so you would want to set up a cron job for this.&lt;/p&gt;

&lt;p&gt;One of this disadvantages of this current script is that it change the display cycle or the polling to Google cycle you need to change the variables within the script. You would want to change this script to pull the files in from an external file if I don’t get round to it. I think building a nice frame for this disply would make it into something useable so I’ll see if I can find something that would like now in a living room or kitchen.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Pimorini" /><category term="Raspberry PI" /><category term="Google Calendar" /><category term="EInk" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">Dark Souls 2 Completed …</title><link href="http://localhost:4000/2017/08/04/Completed-Darksouls2/" rel="alternate" type="text/html" title="Dark Souls 2 Completed …" /><published>2017-08-04T23:01:49+01:00</published><updated>2017-08-04T23:01:49+01:00</updated><id>http://localhost:4000/2017/08/04/Completed-Darksouls2</id><content type="html" xml:base="http://localhost:4000/2017/08/04/Completed-Darksouls2/">&lt;p&gt;And now Dark Souls 2 is completed ….. At least a conclusion to something this year
&lt;img src=&quot;http://emomonkey.github.io/images/darksl2.jpg&quot; alt=&quot;On the Throne&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Dark Souls 2 Completed" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">SpottyMail</title><link href="http://localhost:4000/2017/04/22/SpottyMail/" rel="alternate" type="text/html" title="SpottyMail" /><published>2017-04-22T23:01:49+01:00</published><updated>2017-04-22T23:01:49+01:00</updated><id>http://localhost:4000/2017/04/22/SpottyMail</id><content type="html" xml:base="http://localhost:4000/2017/04/22/SpottyMail/">&lt;p&gt;SpottyMail is now finally live and I am now in the process of advertising the site and hopefully expanding the service. SpottyMail should allow you to share your music so you can advertise your festival, concert or simply share your playlist with your friends. SpottyMail makes use of the 30 second preview API in Spotify so that the music can be shared on Twitter or via HTML Email. If you share via Twitter your tweet will include a link to a web page that is publicly available from the SpottyMail Web Server. If you share this via email the email will be forwarded to your own email address and from here you can share this to other users.&lt;/p&gt;

&lt;p&gt;The Email and Web Page can be changed using an editor than can be used to change the fonts, colours, spacing, layout and images contained within the web page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/htmledit.gif&quot; alt=&quot;HTML Editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SpottyMail also includes a number of prebuilt templates so that you do not have to start from scratch and it will give you an idea of what the tool is capable of. I have also included a number of stock images which you can use as well as links to some other sites that allow you to use banners and images for your own public and personal use.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/htmltemplate.png&quot; alt=&quot;Example Template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To ensure the HTML Emails can be viewed correctly no matter what email reader or browser is used an OpenSource Markup Framework MJML is used to reduce the amount of testing required to ensure your creation will be viewable by the recipients. MJML allows you to Banners, Headers, Table Layout and Text Fields which gives alot of freedom when creating your design. The Basic Spotify application does allow you to share you a preview of a track but this share is a basic link which is not suitable for producing a promotional email or advertisement. If you think this would be useful you can give Spotify a Trial and if you like it enough you can pay a small annual subscription. Spottymail is accessible from here &lt;a href=&quot;http://www.spottymail.co.uk&quot;&gt;http://www.spottymail.co.uk&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Spotify" /><category term="Advertise Spotify" /><category term="Ruby on Rails" /><category term="Twitter Spotify" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">SpottyMail Share with your Crush</title><link href="http://localhost:4000/2017/04/22/SharePlaylist/" rel="alternate" type="text/html" title="SpottyMail Share with your Crush" /><published>2017-04-22T23:01:49+01:00</published><updated>2017-04-22T23:01:49+01:00</updated><id>http://localhost:4000/2017/04/22/SharePlaylist</id><content type="html" xml:base="http://localhost:4000/2017/04/22/SharePlaylist/">&lt;p&gt;Since SpottyMail went live I have been expanding the number of preset templates available in the application and noticed an Internet Meme going around where you “Share Your Playlist with your Crush”. I am off that age where you recorded your compilation of music onto cassette which I think was immortalised in the Nick Hornby book and John Cusask movie High Fidelity. SpottyMail will help you make that Playlist a bit more personal rather than just a link to Spotify. There is a ready made template available&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emomonkey.github.io/images/screencrush.png&quot; alt=&quot;HTML Editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Spottymail is accessible from here &lt;a href=&quot;http://www.spottymail.co.uk&quot;&gt;http://www.spottymail.co.uk&lt;/a&gt; if you want to make your compilation that bit more special&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Spotify" /><category term="Spotify Playlists" /><category term="Ruby on Rails" /><category term="Crush Spotify" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">EBS Validation in Concurrent Jobs</title><link href="http://localhost:4000/2016/12/01/EBS-Validation/" rel="alternate" type="text/html" title="EBS Validation in Concurrent Jobs" /><published>2016-12-01T22:01:49+00:00</published><updated>2016-12-01T22:01:49+00:00</updated><id>http://localhost:4000/2016/12/01/EBS-Validation</id><content type="html" xml:base="http://localhost:4000/2016/12/01/EBS-Validation/">&lt;p&gt;Some more interesting tips with Oracle EBS Validation Set in R12. A Frequent Request is to Filter some of the other valuesets by Date e.g. only Purchase Orders between two date. To Do this we need to Create a From Date Value Set of type FND_STANDARD_DATE.&lt;/p&gt;

&lt;p&gt;The list of Purchase Orders in the Validation Set need to be filter by this date. You would think that the value returned by FND_STANDARD_DATE would be a date but it is not. It is a character that needs formatted e.g. TO_DATE(, ‘YYYY/MM/DD HH24:MI:SS’),&lt;/p&gt;

&lt;p&gt;So in the Validation Table Information screen do the following&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;l_reqid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fnd_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submit_request&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_date&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;TO_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLEX&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FIN_PO_FROM_VS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;YYYY/MM/DD HH24:MI:SS&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;XX...&apos;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- child prg short name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSDATE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub_request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argument1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- child prg arguments&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fnd_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait_for_request&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="Oracle EBS" /><category term="validation" /><category term="Oracle Concurrent Request" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry><entry><title type="html">How to Wait for a Concurrent Request To Complete</title><link href="http://localhost:4000/2016/11/30/ConcurrentRequest-BULK/" rel="alternate" type="text/html" title="How to Wait for a Concurrent Request To Complete" /><published>2016-11-30T22:01:49+00:00</published><updated>2016-11-30T22:01:49+00:00</updated><id>http://localhost:4000/2016/11/30/ConcurrentRequest-BULK</id><content type="html" xml:base="http://localhost:4000/2016/11/30/ConcurrentRequest-BULK/">&lt;p&gt;I recently put together a Concurrent Request that queried the database and used the result to create a number of folders named after the customers in the database. This concurrent routine was called from within Oracle Reports Builder in the after_report event. It needed to be called before the FTP Burst concurrent routine so I have to use the fnd_request.wait_for_request command. However it did not seem to wait for me and which had not been mentioned anywhere I checked on the web.&lt;/p&gt;

&lt;p&gt;This thing I missed was the commit statement. It needs to be run after your submit_request and before the wait_for_request. See below&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;l_reqid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fnd_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submit_request&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;XX...&apos;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- child prg short name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSDATE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub_request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argument1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- child prg arguments&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fnd_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait_for_request&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;emospacemonkey&quot;, &quot;email&quot;=&gt;&quot;stephen.emo@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;emospacemonkey&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>stephen.emo@gmail.com</email></author><category term="fnd_request.submit_request" /><category term="fnd_request.wait_for_request" /><category term="Oracle Concurrent Request" /><category term="FTP Burst" /><summary type="html">{&quot;options&quot;=&gt;{}}</summary></entry></feed>