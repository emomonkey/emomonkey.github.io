<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2015-04-16 06:07"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Stephen Emo's Blog</title>
<link>https://stephenemo.wordpress.com</link>
<description>My Tinkering and Interests Site</description>
<pubDate>Thu, 16 Apr 2015 06:07:08 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://stephenemo.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>emospacemonkey</wp:author_login>
  <wp:author_email>stephen.emo@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[emospacemonkey]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>196</wp:term_id>
  <wp:category_nicename>programming</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[programming]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>115145217</wp:term_id>
  <wp:tag_slug>82285297</wp:tag_slug>
  <wp:tag_name><![CDATA[#!]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>115145970</wp:term_id>
  <wp:tag_slug>115148651</wp:tag_slug>
  <wp:tag_name><![CDATA[#!]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1187</wp:term_id>
  <wp:tag_slug>post</wp:tag_slug>
  <wp:tag_name><![CDATA[$.post]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38494</wp:term_id>
  <wp:tag_slug>2012</wp:tag_slug>
  <wp:tag_name><![CDATA[2012]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>143514</wp:term_id>
  <wp:tag_slug>activerecord</wp:tag_slug>
  <wp:tag_name><![CDATA[ActiveREcord]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>69158536</wp:term_id>
  <wp:tag_slug>apex-4-1</wp:tag_slug>
  <wp:tag_name><![CDATA[Apex 4.1]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>117073245</wp:term_id>
  <wp:tag_slug>apex-4-1-oracle</wp:tag_slug>
  <wp:tag_name><![CDATA[Apex 4.1 oracle]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49798539</wp:term_id>
  <wp:tag_slug>appharbor</wp:tag_slug>
  <wp:tag_name><![CDATA[appharbor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>94234</wp:term_id>
  <wp:tag_slug>asp-net</wp:tag_slug>
  <wp:tag_name><![CDATA[ASP.NET]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14210236</wp:term_id>
  <wp:tag_slug>asp-net-mvc</wp:tag_slug>
  <wp:tag_name><![CDATA[asp.net mvc]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5535428</wp:term_id>
  <wp:tag_slug>asus-eepc</wp:tag_slug>
  <wp:tag_name><![CDATA[Asus eepc]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>135609</wp:term_id>
  <wp:tag_slug>battery</wp:tag_slug>
  <wp:tag_name><![CDATA[battery]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9471</wp:term_id>
  <wp:tag_slug>belfast</wp:tag_slug>
  <wp:tag_name><![CDATA[Belfast]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>116544483</wp:term_id>
  <wp:tag_slug>brewpi</wp:tag_slug>
  <wp:tag_name><![CDATA[BrewPI]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5605</wp:term_id>
  <wp:tag_slug>camera</wp:tag_slug>
  <wp:tag_name><![CDATA[Camera]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4515683</wp:term_id>
  <wp:tag_slug>crunchbang</wp:tag_slug>
  <wp:tag_name><![CDATA[Crunchbang]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>872460</wp:term_id>
  <wp:tag_slug>database-development</wp:tag_slug>
  <wp:tag_name><![CDATA[Database Development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>28293273</wp:term_id>
  <wp:tag_slug>dwarffortress</wp:tag_slug>
  <wp:tag_name><![CDATA[dwarffortress]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>601345</wp:term_id>
  <wp:tag_slug>flask</wp:tag_slug>
  <wp:tag_name><![CDATA[Flask]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>71957</wp:term_id>
  <wp:tag_slug>ge</wp:tag_slug>
  <wp:tag_name><![CDATA[ge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>72123784</wp:term_id>
  <wp:tag_slug>gertboard</wp:tag_slug>
  <wp:tag_name><![CDATA[gertboard]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9634231</wp:term_id>
  <wp:tag_slug>gpio</wp:tag_slug>
  <wp:tag_name><![CDATA[GPIO]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>28434856</wp:term_id>
  <wp:tag_slug>highcharts</wp:tag_slug>
  <wp:tag_name><![CDATA[Highcharts]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>34908</wp:term_id>
  <wp:tag_slug>improvements</wp:tag_slug>
  <wp:tag_name><![CDATA[Improvements]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3148664</wp:term_id>
  <wp:tag_slug>java-spring</wp:tag_slug>
  <wp:tag_name><![CDATA[Java Spring]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>82284051</wp:term_id>
  <wp:tag_slug>jdeveloper-10-1-3</wp:tag_slug>
  <wp:tag_name><![CDATA[Jdeveloper 10.1.3]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>203308</wp:term_id>
  <wp:tag_slug>jquery</wp:tag_slug>
  <wp:tag_name><![CDATA[jQuery]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>205267810</wp:term_id>
  <wp:tag_slug>krakenjs</wp:tag_slug>
  <wp:tag_name><![CDATA[Krakenjs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33836</wp:term_id>
  <wp:tag_slug>motor</wp:tag_slug>
  <wp:tag_name><![CDATA[motor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>36699</wp:term_id>
  <wp:tag_slug>mvc</wp:tag_slug>
  <wp:tag_name><![CDATA[MVC]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9258762</wp:term_id>
  <wp:tag_slug>mvvm</wp:tag_slug>
  <wp:tag_name><![CDATA[MVVM]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5035</wp:term_id>
  <wp:tag_slug>northern-ireland</wp:tag_slug>
  <wp:tag_name><![CDATA[Northern Ireland]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3766</wp:term_id>
  <wp:tag_slug>oracle</wp:tag_slug>
  <wp:tag_name><![CDATA[oracle]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>201293</wp:term_id>
  <wp:tag_slug>oracle-apex</wp:tag_slug>
  <wp:tag_name><![CDATA[oracle apex]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>194043414</wp:term_id>
  <wp:tag_slug>piglow</wp:tag_slug>
  <wp:tag_name><![CDATA[PiGlow]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>434917</wp:term_id>
  <wp:tag_slug>postgres</wp:tag_slug>
  <wp:tag_name><![CDATA[postgres]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>19956</wp:term_id>
  <wp:tag_slug>property</wp:tag_slug>
  <wp:tag_name><![CDATA[Property]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>832</wp:term_id>
  <wp:tag_slug>python</wp:tag_slug>
  <wp:tag_name><![CDATA[Python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6652</wp:term_id>
  <wp:tag_slug>rails</wp:tag_slug>
  <wp:tag_name><![CDATA[rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49695267</wp:term_id>
  <wp:tag_slug>raspberry-pi</wp:tag_slug>
  <wp:tag_name><![CDATA[raspberry pi]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3225</wp:term_id>
  <wp:tag_slug>real-estate</wp:tag_slug>
  <wp:tag_name><![CDATA[Real Estate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>141487</wp:term_id>
  <wp:tag_slug>residents</wp:tag_slug>
  <wp:tag_name><![CDATA[Residents]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10724</wp:term_id>
  <wp:tag_slug>resource</wp:tag_slug>
  <wp:tag_name><![CDATA[resource]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4872</wp:term_id>
  <wp:tag_slug>ruby</wp:tag_slug>
  <wp:tag_name><![CDATA[Ruby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2602386</wp:term_id>
  <wp:tag_slug>ruby-in-rails</wp:tag_slug>
  <wp:tag_name><![CDATA[ruby in rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3601</wp:term_id>
  <wp:tag_slug>ruby-on-rails</wp:tag_slug>
  <wp:tag_name><![CDATA[Ruby on rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>119655432</wp:term_id>
  <wp:tag_slug>ryanbiggs</wp:tag_slug>
  <wp:tag_name><![CDATA[Ryanbiggs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1130504</wp:term_id>
  <wp:tag_slug>servo</wp:tag_slug>
  <wp:tag_name><![CDATA[servo]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9486</wp:term_id>
  <wp:tag_slug>spring</wp:tag_slug>
  <wp:tag_name><![CDATA[Spring]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>36015240</wp:term_id>
  <wp:tag_slug>torchlight-2</wp:tag_slug>
  <wp:tag_name><![CDATA[torchlight 2]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>599182</wp:term_id>
  <wp:tag_slug>twitter</wp:tag_slug>
  <wp:tag_name><![CDATA[twitter]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>255</wp:term_id>
  <wp:tag_slug>ubuntu</wp:tag_slug>
  <wp:tag_name><![CDATA[ubuntu]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1311799</wp:term_id>
  <wp:tag_slug>web-scraping</wp:tag_slug>
  <wp:tag_name><![CDATA[Web Scraping]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3042938</wp:term_id>
  <wp:tag_slug>weighted-average</wp:tag_slug>
  <wp:tag_name><![CDATA[weighted average]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>329541880</wp:term_id>
  <wp:tag_slug>www-propertytrackerni-co-uk</wp:tag_slug>
  <wp:tag_name><![CDATA[www.propertytrackerni.co.uk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1426127</wp:term_id>
  <wp:tag_slug>xcom</wp:tag_slug>
  <wp:tag_name><![CDATA[XCOM]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>326023</wp:term_id>
  <wp:tag_slug>xsd</wp:tag_slug>
  <wp:tag_name><![CDATA[Xsd]]></wp:tag_name>
</wp:tag>
<wp:term>
  <wp:term_id>119658275</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>menu-1</wp:term_slug>
  <wp:term_name><![CDATA[Menu 1]]></wp:term_name>
</wp:term>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title> &#187; Stephen Emo&#039;s Blog</title>
		<link>https://stephenemo.wordpress.com</link>
	</image>
	<item>
  <title>About</title>
  <link>https://stephenemo.wordpress.com/about/</link>
  <pubDate>Thu, 13 Oct 2011 14:29:20 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?page_id=2</guid>
  <description/>
  <content:encoded><![CDATA[Software Development Blog

&nbsp;

Any comments can be left on this blog]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2011-10-13 14:29:20</wp:post_date>
  <wp:post_date_gmt>2011-10-13 14:29:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Jdeveloper</title>
  <link>https://stephenemo.wordpress.com/2012/03/10/jdeveloper/</link>
  <pubDate>Sat, 10 Mar 2012 12:38:29 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=4</guid>
  <description/>
  <content:encoded><![CDATA[Tips on jdeveloper 10.1.3 

1. Get an error 500 for no reason when you run the application. Code look fine. Then the issue could be jdeveloper 10.1.3 has decided to add the public HTML to your model it will do this because you accidentally hit run app when you selected the model :) This happened to me twice

2. If you add a new managed bean make sure If you edit the faces-config.XML that jdeveloper does not add a duplicate bean on you.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2012-03-10 12:38:29</wp:post_date>
  <wp:post_date_gmt>2012-03-10 12:38:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jdeveloper</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="jdeveloper-10-1-3"><![CDATA[Jdeveloper 10.1.3]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-03-10 12:38:32";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Jdeveloper and xsd</title>
  <link>https://stephenemo.wordpress.com/2012/04/06/jdeveloper-and-xsd/</link>
  <pubDate>Fri, 06 Apr 2012 18:23:33 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=6</guid>
  <description/>
  <content:encoded><![CDATA[Jdeveloper 10.1.3 has no ability to parse xsd if you use built in wizard. It just uses jaxb to generate class and code. For something generic use documentbuilderfactory in java 5
<blockquote>
 
    protected void validateXSD(String sFileName) throws Exception,SAXException
      {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setNamespaceAware(true);
            factory.setValidating(true);
            factory.setAttribute("http://java.sun.com/xml/jaxp/properties/schemaLanguage", "http://www.w3.org/2001/XMLSchema");
         
            URL  sURL = Thread.currentThread().getContextClassLoader().getResource(XML_SCHEMA);    
            String sFile = sURL.getFile();        
            factory.setAttribute("http://java.sun.com/xml/jaxp/properties/schemaSource", "file:" + sFile);
                   
            DocumentBuilder builder = factory.newDocumentBuilder();
            builder.setErrorHandler( new ErrorHandler() {   
                    @Override   
                    public void error(SAXParseException arg0) throws SAXException {
                         throw arg0;                 
                    }     
                    @Override   
                    public void fatalError(SAXParseException arg0) throws SAXException {
                         throw arg0;
                    }     
                    @Override   
                    public void warning(SAXParseException arg0) throws SAXException {
                         throw arg0;
                    } 
            });
         
            org.w3c.dom.Document document = builder.parse(new File(sFileName));
                   
               
         
      }
 
 
      validateXSD(sOutputPath + sCurrDate + sName);
     
      SAXReader reader = new SAXReader(true);
      reader.setValidation(false);
      org.dom4j.Document doc = null;
                    
      doc = reader.read(new File(sOutputPath + sCurrDate + sName));
               
      /* Iterate through the entries */
      iterateElements(doc); 
 
&gt;</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>6</wp:post_id>
  <wp:post_date>2012-04-06 18:23:33</wp:post_date>
  <wp:post_date_gmt>2012-04-06 18:23:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jdeveloper-and-xsd</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="jdeveloper-10-1-3"><![CDATA[Jdeveloper 10.1.3]]></category>
  <category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Loading that xsd file</title>
  <link>https://stephenemo.wordpress.com/2012/04/11/loading-that-xsd-file/</link>
  <pubDate>Wed, 11 Apr 2012 18:03:47 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=8</guid>
  <description/>
  <content:encoded><![CDATA[Locating a resource file is a bit awkward in jdeveloper. Getresource takes the public_HTML when called from the view controller so you have to figure out where the classpath is. Look for the entry in system. getProperties to find it...dint forget to start the path with backslash first]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2012-04-11 18:03:47</wp:post_date>
  <wp:post_date_gmt>2012-04-11 18:03:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>loading-that-xsd-file</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="jdeveloper-10-1-3"><![CDATA[Jdeveloper 10.1.3]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="resource"><![CDATA[resource]]></category>
  <category domain="post_tag" nicename="xsd"><![CDATA[Xsd]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-04-11 18:03:48";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Apex 4.1 versus Ruby on Rails</title>
  <link>https://stephenemo.wordpress.com/2012/07/23/apex-4-1-versus-ruby-on-rails/</link>
  <pubDate>Mon, 23 Jul 2012 14:53:14 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=11</guid>
  <description/>
  <content:encoded><![CDATA[One thing I need to explain is that my workplace is an Oracle house through and through. Our development tools are jdeveloper 10.1.3, our databases are oracle, our rad tools are oracle.. Apex 4.1 to be exact . It has been interesting working on this at work and at home ruby on rails. They could no be more different.

Apex 4.1 is there to sell oracle whereas ruby on rails is designed to be database independent... The logic is in the code. Now in Apex 4.1 defense as everything is the database you can write direct SQL and optimise it a much as you want.

This is not possible in ruby on rails ad you ideally do not write SQL.

Now ruby is much more flexible in terms of coding . The no of controls from grids, frameworks such as bootstrap and input from an enthusiastic opensource community cannot be matched from what is a tool to sell oracle databases.

Apex 4.1 will give you an app in 2 days. Ruby maybe longer but at least you have real code you can reuse. Still. Apex 4.1 will remain a tool at work.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2012-07-23 14:53:14</wp:post_date>
  <wp:post_date_gmt>2012-07-23 14:53:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>apex-4-1-versus-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="apex-4-1"><![CDATA[Apex 4.1]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-07-23 14:53:14";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>131</wp:comment_id>
    <wp:comment_author><![CDATA[Faraz Ahmed]]></wp:comment_author>
    <wp:comment_author_email>farazahmed720@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.farazahmed.de</wp:comment_author_url>
    <wp:comment_author_IP>212.21.161.88</wp:comment_author_IP>
    <wp:comment_date>2015-02-02 15:40:16</wp:comment_date>
    <wp:comment_date_gmt>2015-02-02 15:40:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice comparison, thanks!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1422895227.604443073272705078125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1422891617.4050519466400146484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1422891618</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>20120802-101821.jpg</title>
  <link>https://stephenemo.wordpress.com/2012/08/02/development-environment/20120802-101821-jpg/</link>
  <pubDate>Thu, 02 Aug 2012 09:18:33 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2012-08-02 09:18:33</wp:post_date>
  <wp:post_date_gmt>2012-08-02 09:18:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>20120802-101821-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>14</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg</wp:attachment_url>
</item>
<item>
  <title>Development environment</title>
  <link>https://stephenemo.wordpress.com/2012/08/02/development-environment/</link>
  <pubDate>Thu, 02 Aug 2012 09:18:39 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=14</guid>
  <description/>
  <content:encoded><![CDATA[Shot of my development environment. Asus eepc, ubuntu netbook edition 10, sdcard mount for tmp folder, Dropbox on USB stick, ruby on rails and a tranparent terminal screen to recreate that dual screen effect. Talk about cost effective :)<br /><br /><a href="http://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg"><img src="http://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg" alt="20120802-101821.jpg" class="alignnone size-full" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2012-08-02 09:18:39</wp:post_date>
  <wp:post_date_gmt>2012-08-02 09:18:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>development-environment</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="asus-eepc"><![CDATA[Asus eepc]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:65:"http://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg";s:6:"images";a:1:{s:65:"http://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg";a:6:{s:8:"file_url";s:65:"http://stephenemo.files.wordpress.com/2012/08/20120802-101821.jpg";s:5:"width";i:400;s:6:"height";i:300;s:4:"type";s:5:"image";s:4:"area";i:120000;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:1;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-08-02 09:18:39";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>19</wp:comment_id>
    <wp:comment_author><![CDATA[Hrafnkell Hallmunds (@hrafnkellbrimar)]]></wp:comment_author>
    <wp:comment_author_email>hrafnkellbrimar@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/hrafnkellbrimar</wp:comment_author_url>
    <wp:comment_author_IP>31.209.193.30</wp:comment_author_IP>
    <wp:comment_date>2012-10-16 01:04:15</wp:comment_date>
    <wp:comment_date_gmt>2012-10-16 01:04:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1352190127</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1420141018/pixlrEdit2_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>217942416</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350349455.6660039424896240234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-16 01:04:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>20120921-161158.jpg</title>
  <link>https://stephenemo.wordpress.com/2012/09/21/crunchbang-or/20120921-161158-jpg/</link>
  <pubDate>Fri, 21 Sep 2012 15:12:08 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2012-09-21 15:12:08</wp:post_date>
  <wp:post_date_gmt>2012-09-21 15:12:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>20120921-161158-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>17</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg</wp:attachment_url>
</item>
<item>
  <title>Crunchbang or #!</title>
  <link>https://stephenemo.wordpress.com/2012/09/21/crunchbang-or/</link>
  <pubDate>Fri, 21 Sep 2012 15:12:12 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=17</guid>
  <description/>
  <content:encoded><![CDATA[I have my development environment on my ASUS netbook set up to use crunchbang. This is a Linux distribution that is based on the current debian build but is really streamed down to include just what you need. The ui is minimal, keyshortcuts straightforward e.g space and windows key is for the menu. No waiting for graphic menus being pulled up. Most importantly it's not abandonware like the netbook version of ubuntu<br /><br /><a href="http://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg"><img src="http://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg" alt="20120921-161158.jpg" class="alignnone size-full" /></a>

Installing ruby on rails has been easy and allowed me to work rather than configuring libraries on the OS. My document viewer for the legend file of dwarffortress needs to read an XML of 147 megs in size . Obviously something that cannot be done in realtime on a web page. I have used DJ or delayed_job gem to do this. Simple task of using a keyword delay in front of your method and some config of course.

Hoping to get the app up on heroku real soon .]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2012-09-21 15:12:12</wp:post_date>
  <wp:post_date_gmt>2012-09-21 15:12:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>crunchbang-or</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="115148651"><![CDATA[#!]]></category>
  <category domain="post_tag" nicename="crunchbang"><![CDATA[Crunchbang]]></category>
  <category domain="post_tag" nicename="dwarffortress"><![CDATA[dwarffortress]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:65:"http://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg";s:6:"images";a:1:{s:65:"http://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg";a:6:{s:8:"file_url";s:65:"http://stephenemo.files.wordpress.com/2012/09/20120921-161158.jpg";s:5:"width";i:300;s:6:"height";i:225;s:4:"type";s:5:"image";s:4:"area";i:67500;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:1;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-09-21 15:19:29";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reusable pages apex 4.1</title>
  <link>https://stephenemo.wordpress.com/2012/10/05/reusable-pages-apex-4-1/</link>
  <pubDate>Fri, 05 Oct 2012 12:30:49 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=22</guid>
  <description/>
  <content:encoded><![CDATA[If you are struggling to write reusable pages in apex 4.1 with even simple things such as creating dynamic title page try this

1. Stores title in hid field.
2. In title text put &amp;PX_XX. where the name matches the field in point 1

Seems a mishmash on what you should declare to use the value of a field e.g :PX_XX or P_XX or sometimes v('') but you can get reusable code done in apex to a certain extent. As long as u don't expect MVC levels :)


Padding parameters by URL is also a bit unusual. You have to list the parameters you are populating on the next page then separate this with a : and then the values u are inputing

E.g url = 'f?p=&amp;APP_ID.:4:&amp;APP_SESSION.::&amp;DEBUG.::P4_ID,P4_TRANSACTION:&amp;P15_ID.,EDIT']]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>22</wp:post_id>
  <wp:post_date>2012-10-05 12:30:49</wp:post_date>
  <wp:post_date_gmt>2012-10-05 12:30:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reusable-pages-apex-4-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="apex-4-1-oracle"><![CDATA[Apex 4.1 oracle]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-10-08 20:17:13";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Crunchbang install tip</title>
  <link>https://stephenemo.wordpress.com/2012/10/21/crunchbang-install-tip/</link>
  <pubDate>Sun, 21 Oct 2012 09:13:25 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=25</guid>
  <description/>
  <content:encoded><![CDATA[Had to reinstall crunchbang. Once again ryanbiggs install guide helped. There where two changes need

1. Mentioned on the crunchbang forum at the rvm install stage u get zlib errors. Solutionis on this forum

2. .bashrc needs changed with below line

[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm"

To see .bashrc use file manager and hit ctrl h to see system files]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2012-10-21 09:13:25</wp:post_date>
  <wp:post_date_gmt>2012-10-21 09:13:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>crunchbang-install-tip</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="crunchbang"><![CDATA[Crunchbang]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="ryanbiggs"><![CDATA[Ryanbiggs]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-10-21 09:13:26";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dwarfquery : Ruby on Rails Application for Dwarf Fortress</title>
  <link>https://stephenemo.wordpress.com/dwarfquery-ruby-on-rails-application-for-dwarf-fortress/</link>
  <pubDate>Sun, 25 Nov 2012 13:07:47 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?page_id=30</guid>
  <description/>
  <content:encoded><![CDATA[This application parses the Legend File produced by a Dwarf Fortress game before you start the game. It can be a considerable size with a medium sized game being a couple of hundred megabytes in size. This XML is difficult to read. This tool parses the information and turns it into a searchable database.

It is currently hosted on CloudFoundry. As the XML file is large it is not run in real time but using Resque/.Redis which means the file can be parsed not in real time. Also as the Worker Instance (which parses the file) is a different application than the Server app and Cloudfoundry does not allow shared files, the file is uploads then synced across on Dropbox. This can mean 10 minutes or so for a large file to upload.

I would probably do the parsing by email if I was to extend this.

You can view the login and see what goes on within the application at

dwarfquery.cloudfoundry.com

Use the test user : testuser@gmail.com. password is:sammy1

Using this test user you and search and view the data.

This application makes use of alot of gems within Rails including the composite_key, dropbox sdk, resque and of course cloudfoundry.

Including some screenshots below. Historical Figures, Entities they are linked to and Historical Events. There is more related informaton if you browse round

<a href="http://stephenemo.files.wordpress.com/2012/11/histfig.gif"><img class="alignleft size-medium wp-image-31" title="histfig" alt="" src="http://stephenemo.files.wordpress.com/2012/11/histfig.gif?w=300" height="217" width="300" /></a>

&nbsp;

<a href="http://stephenemo.files.wordpress.com/2012/11/entlinks.gif"><img class="alignleft size-medium wp-image-32" title="entlinks" alt="" src="http://stephenemo.files.wordpress.com/2012/11/entlinks.gif?w=300" height="217" width="300" /></a>

&nbsp;

<a href="http://stephenemo.files.wordpress.com/2012/11/hisfigevt.gif"><img class="alignleft size-medium wp-image-33" title="hisfigevt" alt="" src="http://stephenemo.files.wordpress.com/2012/11/hisfigevt.gif?w=300" height="217" width="300" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>30</wp:post_id>
  <wp:post_date>2012-11-25 13:07:47</wp:post_date>
  <wp:post_date_gmt>2012-11-25 13:07:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dwarfquery-ruby-on-rails-application-for-dwarf-fortress</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>histfig</title>
  <link>https://stephenemo.wordpress.com/dwarfquery-ruby-on-rails-application-for-dwarf-fortress/histfig/</link>
  <pubDate>Sun, 25 Nov 2012 13:00:35 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2012/11/histfig.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>31</wp:post_id>
  <wp:post_date>2012-11-25 13:00:35</wp:post_date>
  <wp:post_date_gmt>2012-11-25 13:00:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>histfig</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>30</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2012/11/histfig.gif</wp:attachment_url>
</item>
<item>
  <title>entlinks</title>
  <link>https://stephenemo.wordpress.com/dwarfquery-ruby-on-rails-application-for-dwarf-fortress/entlinks/</link>
  <pubDate>Sun, 25 Nov 2012 13:05:04 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2012/11/entlinks.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2012-11-25 13:05:04</wp:post_date>
  <wp:post_date_gmt>2012-11-25 13:05:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>entlinks</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>30</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2012/11/entlinks.gif</wp:attachment_url>
</item>
<item>
  <title>hisfigevt</title>
  <link>https://stephenemo.wordpress.com/dwarfquery-ruby-on-rails-application-for-dwarf-fortress/hisfigevt/</link>
  <pubDate>Sun, 25 Nov 2012 13:06:11 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2012/11/hisfigevt.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>33</wp:post_id>
  <wp:post_date>2012-11-25 13:06:11</wp:post_date>
  <wp:post_date_gmt>2012-11-25 13:06:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hisfigevt</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>30</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2012/11/hisfigevt.gif</wp:attachment_url>
</item>
<item>
  <title>Good bye Ruby on Rails  and Hello MVVM ASP.Net</title>
  <link>https://stephenemo.wordpress.com/2012/12/27/good-bye-ruby-on-rails-and-hello-mvvm-asp-net/</link>
  <pubDate>Thu, 27 Dec 2012 14:15:40 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=37</guid>
  <description/>
  <content:encoded><![CDATA[Well my ruby on rails application is up on Cloudfoundry at  dwarfquery.cloudfoundry.com. I have to admit I found cloudfoundry put a lot of limitations on your application. As this application had to parse very large XML files...maybe too large and Cloudfoundry does not allow you to share files I have to upload to temp and then upload to Dropbox. This was very awkward but necessary as the worker instance could not share files with the server instance. Also cloudfoundry forced me to use it's own instance of jquery.

Still there where some flaws with this concept of uploading 100's of megs of an XML file to be parsed but then again my project had to be ruby on rails as I was restricted to be netbook development environment.

Now however I have a Windows 8 laptop so new simple project is a MVVM application which calls the Diablo 3 Web API :) That and XCOM Enemy Unknown. Happy Christmas

As an update. I am using the MVVM template in Visual Studio Express 2012 for Web and I do think there is a bit more coding than MVC. The model has to be recreated twice, once in the C# server end and once in the JavaScript VM part of it. A lot of the template seems to assume I want my changes commited there and then however I do think database applications should have a standard commit button to give the user time to sanity check the updates before a commit. It could be that MVVM is only for certain applications i.e ones that need real time interaction. Still I want to use this technology so I will keep on with the MVVM template.

As for XCOM I cannot believe how hard the zombies are.........LMG's don't slow them down :(

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>37</wp:post_id>
  <wp:post_date>2012-12-27 14:15:40</wp:post_date>
  <wp:post_date_gmt>2012-12-27 14:15:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>good-bye-ruby-on-rails-and-hello-mvvm-asp-net</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="2012"><![CDATA[2012]]></category>
  <category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
  <category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
  <category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xcom"><![CDATA[XCOM]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2012-12-28 01:54:29";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>$.Post on ASP.Net MVC 4</title>
  <link>https://stephenemo.wordpress.com/2013/03/17/post-on-asp-net-mvc-4/</link>
  <pubDate>Sun, 17 Mar 2013 01:31:28 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=48</guid>
  <description/>
  <content:encoded><![CDATA[Surprised I did not see an example of this on the web but I noticed to use $.post to pass a value to an Action in your controller you need to JSON.stringify on the value to get it to post. Otherwise the value you get in your parameter will be null. See below
<blockquote> $.post("/GemTable/ProcessBestGem",  { sGems: JSON.stringify(sname) }, function (html) {
// Do Something;
},"json");</blockquote>
Useful to know maybe.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>48</wp:post_id>
  <wp:post_date>2013-03-17 01:31:28</wp:post_date>
  <wp:post_date_gmt>2013-03-17 01:31:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>post-on-asp-net-mvc-4</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="post"><![CDATA[$.post]]></category>
  <category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
  <category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
  <category domain="post_tag" nicename="mvc"><![CDATA[MVC]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2013-03-17 01:31:28";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Windows Azure Versus Heroku/Cloudfoundry</title>
  <link>https://stephenemo.wordpress.com/2013/04/01/windows-azure-versus-herokucloudfoundry/</link>
  <pubDate>Mon, 01 Apr 2013 22:28:59 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=50</guid>
  <description/>
  <content:encoded><![CDATA[I have been getting ready to deploy my TorchLight 2 ASP.Net MVC4 Application to Windows Azure but noticed even for a test instance it is not free for longer than 3 months. Making a deployment to that sight pretty meaningless. There is definitely an advantage to using Open Source Software if you are going to deploy something for fun and not fore profit.

ASP.NET MVC4 is a nice development environment, they have learned alot from Ruby on Rails so thing I will at least put some blog posts on my experience of using ASP.NET. Probably in comparison to Oracle Applications Express after all that is a significant part of my Day Job at times and like Microsoft , Oracle is not a Pro Open Source Software Provider]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>50</wp:post_id>
  <wp:post_date>2013-04-01 22:28:59</wp:post_date>
  <wp:post_date_gmt>2013-04-01 22:28:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>windows-azure-versus-herokucloudfoundry</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
  <category domain="post_tag" nicename="oracle-apex"><![CDATA[oracle apex]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2013-04-01 22:28:59";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>I have been working on an ASP.Net MVC</title>
  <link>https://stephenemo.wordpress.com/2013/04/07/53/</link>
  <pubDate>Sun, 07 Apr 2013 18:38:32 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/2013/04/07/53/</guid>
  <description/>
  <content:encoded><![CDATA[I have been working on an ASP.Net MVC EF Application that allows you to explore, query and analyse that Item and Gem Data in the TorchLight 2 Game. I thought it would be an interesting project that would allow me to compare ASP.Net MVC with Ruby on Rails and more importantly Oracle Applications Express 4.1, a tool that I use reasonably often at work.

I have to admit I have found ASP.Net in the past not that interesting especially compared to classic ASP, the whole Web Forms concept seemed to be too custom and too dependent on clicking in controls, seemed too ActiveX or VB6.

ASP.Net MVC does give you complete control of the code, you can use many open source controls and the Microsoft specific HTML helpers are generally useful although the Ajax Helpers are a bit too restrictive you are far better just writing it yourself in Javascript at least that way you can debug it. The Entity Framework does a good job of replicating Ruby on Rails ActiveRecord Framework although I found defining the relationships through the Model a bit awkward, it's simply an annotation in Ruby on Rails. Now as I have an existing database (I had to pull the Item/Gem data out of Torchlight 2 I  could not use the Code First Method) so that may be one reason but again it was easy to use Ruby on Rails annotation to define how things are mapped.

Saying that Visual Studio Express 2012 is much nicer than the gedit environment I used on my netbook for Ruby on Rails. Git Integration is nice however I could not use it well with AppHarbour, in fact Git Integration in the Express version seems quite awkward, how you rollback from within Visual Studio seemed impossible

I used the Windows 8 Github add on and that worked seemlessly with AppHarbor and AppHarbor is free unlike Azure which is free for 3 months. Should have realised that going the way Microsoft charges you even to play online with XBox ;). Also another nice think with AppHarbor, once I had my connections set up I could easily copy my databases across though that might be to do with Sql Server Management tools.

So my Torchlight 2 Application, what does it consist of. Well firstly the home screen.

<a href="http://emospacemonkey.files.wordpress.com/2013/04/home.png"><img id="i-78" alt="Image" src="http://emospacemonkey.files.wordpress.com/2013/04/home.png?w=487" /></a>

As you can see it is all fairly standard from here you can explore the search for specific items/weapns, there is also a couple of Wizards which advise use the best use of a gem and the best use of the weapons.

You can also Explore through the Item Database

Below is a screenshot of searching through the Item database

<a href="http://emospacemonkey.files.wordpress.com/2013/04/search.png"><img id="i-83" alt="Image" src="http://emospacemonkey.files.wordpress.com/2013/04/search.png?w=487" /></a>

Below is a screen of the Gem Wizard where it give advice on their best use.

<a href="http://emospacemonkey.files.wordpress.com/2013/04/wizard.png"><img id="i-85" alt="Image" src="http://emospacemonkey.files.wordpress.com/2013/04/wizard.png?w=487" /></a>

Below is a screen of the Item Detail Screen

<a href="http://stephenemo.files.wordpress.com/2013/04/details.jpg"><img class="alignleft size-medium wp-image-55" alt="details" src="http://stephenemo.files.wordpress.com/2013/04/details.jpg?w=300" width="300" height="217" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

Below is a screen of the Best Weapon Use Screen

<a href="http://stephenemo.files.wordpress.com/2013/04/bestweap.jpg"><img class="alignleft size-medium wp-image-56" alt="bestweap" src="http://stephenemo.files.wordpress.com/2013/04/bestweap.jpg?w=300" width="300" height="217" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

Screen of the Explore Items Screen

<a href="http://emospacemonkey.files.wordpress.com/2013/04/explore.png"><img id="i-90" alt="Image" src="http://emospacemonkey.files.wordpress.com/2013/04/explore.png?w=487" /></a>

There are quite a few screens, they all make use of Partial Paging, Ajax and the Entity Framework, You do not have to log into the application except if you want to add Items to the basket. I have not done anymore with this and probably won't, I have a raspberry pi and gertboard to play with.

Do feel like doing a post comparing ASP.Net MVC with Oracle Applications Express 4.1, comparing Models, Views, Controllers, ModelViews and separating out database code into separate classes is kindof hard to do in Apex but there are ways of structuring code in Apex. And I will find it interesting thinking about how my Apex code has been formally structured (packages, functions, Apex API and of course that front end).

My torchlight2 app can be found at <a title="Torchlight2 DB" href="http://torchlight2db.apphb.com">http://torchlight2db.apphb.com</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>53</wp:post_id>
  <wp:post_date>2013-04-07 18:38:32</wp:post_date>
  <wp:post_date_gmt>2013-04-07 18:38:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>53</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="appharbor"><![CDATA[appharbor]]></category>
  <category domain="post_tag" nicename="asp-net-mvc"><![CDATA[asp.net mvc]]></category>
  <category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
  <category domain="post_tag" nicename="torchlight-2"><![CDATA[torchlight 2]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_dbf42a71859dff30072ba49c165ff3f6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3787e8054d4bd3f55564a4358391cf15</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>details</title>
  <link>https://stephenemo.wordpress.com/2013/04/07/53/details/</link>
  <pubDate>Sun, 07 Apr 2013 18:44:56 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2013/04/details.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>55</wp:post_id>
  <wp:post_date>2013-04-07 18:44:56</wp:post_date>
  <wp:post_date_gmt>2013-04-07 18:44:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>details</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>53</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2013/04/details.jpg</wp:attachment_url>
</item>
<item>
  <title>bestweap</title>
  <link>https://stephenemo.wordpress.com/2013/04/07/53/bestweap/</link>
  <pubDate>Sun, 07 Apr 2013 18:46:00 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2013/04/bestweap.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>56</wp:post_id>
  <wp:post_date>2013-04-07 18:46:00</wp:post_date>
  <wp:post_date_gmt>2013-04-07 18:46:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bestweap</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>53</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2013/04/bestweap.jpg</wp:attachment_url>
</item>
<item>
  <title>Home</title>
  <link>https://stephenemo.wordpress.com/?p=58</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=58</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>58</wp:post_id>
  <wp:post_date>2013-04-28 14:50:34</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[58]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://stephenemo.wordpress.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1367160636]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://stephenemo.wordpress.com/?p=59</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=59</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>59</wp:post_id>
  <wp:post_date>2013-04-28 14:50:36</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1367160638]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://stephenemo.wordpress.com/?p=61</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=61</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>61</wp:post_id>
  <wp:post_date>2013-04-28 14:50:40</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[30]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1367160643]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Home</title>
  <link>https://stephenemo.wordpress.com/2013/04/28/home/</link>
  <pubDate>Sun, 28 Apr 2013 14:52:33 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=62</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>62</wp:post_id>
  <wp:post_date>2013-04-28 14:52:33</wp:post_date>
  <wp:post_date_gmt>2013-04-28 14:52:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>home</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[62]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://stephenemo.wordpress.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://stephenemo.wordpress.com/2013/04/28/63/</link>
  <pubDate>Sun, 28 Apr 2013 14:52:34 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=63</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>63</wp:post_id>
  <wp:post_date>2013-04-28 14:52:34</wp:post_date>
  <wp:post_date_gmt>2013-04-28 14:52:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>63</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://stephenemo.wordpress.com/?p=65</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=65</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>65</wp:post_id>
  <wp:post_date>2013-04-28 14:51:27</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[30]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1367160689]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>TorchLight2 Item Database</title>
  <link>https://stephenemo.wordpress.com/torchlight2-item-database/</link>
  <pubDate>Sun, 28 Apr 2013 14:56:57 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?page_id=66</guid>
  <description/>
  <content:encoded><![CDATA[This is a Demo EF MVC4 Application I put together. The data has been pulled from a PAK file in Torchlight2. Uses jQuery, AJAX, EF and MFC. Used it as well for some automated testing as well something that cannot be done in Oracle APEX.

&nbsp;

&lt;a href="<a title="Torchlight2 DB" href="http://torchlight2db.apphb.com">http://torchlight2db.apphb.com</a>"&gt; TorchLight 2 Item Database &lt;/a&gt;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>66</wp:post_id>
  <wp:post_date>2013-04-28 14:56:57</wp:post_date>
  <wp:post_date_gmt>2013-04-28 14:56:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>torchlight2-item-database</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_oembed_dbf42a71859dff30072ba49c165ff3f6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://stephenemo.wordpress.com/2013/04/28/68/</link>
  <pubDate>Sun, 28 Apr 2013 14:57:54 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=68</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>68</wp:post_id>
  <wp:post_date>2013-04-28 14:57:54</wp:post_date>
  <wp:post_date_gmt>2013-04-28 14:57:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>68</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>4</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[66]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Gertboard</title>
  <link>https://stephenemo.wordpress.com/2013/04/28/gertboard/</link>
  <pubDate>Sun, 28 Apr 2013 15:12:26 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=70</guid>
  <description/>
  <content:encoded><![CDATA[Well I have been running through the test programs for my gertboard and they all seem straightforward. There are a few snags you can hit even using the manual.

The manual has lots of wiring diagrams but it does not clearly explain you need to put the 3V jumper on to fully enable the buttons and leds. Secondly for the motor test it does not fully explain the type of external power source you need. I initially had a 2 AA battery pack as used on the adafruit example. This did not produce enough voltage to power the motor through the gertboard (it did power when the battery was hooked direct to the 3V motor) A 9V PP3 battery is required to power the 3V motor on the motor test program.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>70</wp:post_id>
  <wp:post_date>2013-04-28 15:12:26</wp:post_date>
  <wp:post_date_gmt>2013-04-28 15:12:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gertboard</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="battery"><![CDATA[battery]]></category>
  <category domain="post_tag" nicename="gertboard"><![CDATA[gertboard]]></category>
  <category domain="post_tag" nicename="motor"><![CDATA[motor]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ATMega Gertboard controlled servo via serial input</title>
  <link>https://stephenemo.wordpress.com/2013/05/18/atmega-gertboard-controlled-servo-via-serial-input/</link>
  <pubDate>Sat, 18 May 2013 23:58:35 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=75</guid>
  <description/>
  <content:encoded><![CDATA[http://youtu.be/BzVuvnOsOYc

Well I have worked through quite a few of the demos on the gertboard manual so I thought I'd spend some time combining the demos and rather than just have a motor going or a led lighting up I duct taped a nerf gun to the servo and as you can see from the demo it does fire.

Alex eames from raspi tv give some help on wiring it together, as well the sketches in the arduino ide mention pin 9 and using the gertboard you have to use the buffers so you set up buffer 1 as pin 9.

To wire it up you do the following : PB1 to B1 on J3 and servo pulse to BUF1 near the leds. Jumper B1 set to output.
GND lead of servo to Gertboard GND and 5V servo lead to 5V supply. GND of 5V supply also to Gertboard GND.
<a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=42&amp;t=37624"> raspberryorg</a>

You jumper off the output as PB1 will provide the input to Buf 1. You then wire the control cable [orange on the servo] to Buf 1. The ground cable from the servo goes in the ground of PB1 and the positive servo cable to the positive battery. I ground the battery cable to the ground on PB1.It does not seem to matter where it is ground goes

Minicom has been set up on the raspberry pi so GP14 and GP15 had jumpers set across to MCTX and RCTX as can be seen in the video. All that needs done to read the data from minicom (serial comms) is the function call Serial.Read

The code from the arduino ide is listed below
<blockquote>// Serial Servo Nerf

#include &lt;Servo.h&gt;

Servo myservo; // create servo object
byte num = 0; // read in serial input
int pos = 0;
int servo_enabled = 0;

void setup() {
// initialize serial port
Serial.begin(9600);
myservo.attach(9); // attaches the servo on pin 9
}

void loop()
{
// pressing the letter a fires the servo
num = Serial.read();

if (num == 97 &amp;&amp; servo_enabled == 0)
{
servo_enabled = 1;
Serial.print("arming nerf");
Serial.print("character received: ");
Serial.println(num, DEC);
delay(1); // required to read serial buffer
}
}

if (servo_enabled ==  1 )
{

for(pos = 0; pos &lt; 100; pos +=1)
{    myservo.write(pos);
delay(15); // waaaaaits 15 ms for the servo to reach position
}

// move back
for(pos =  100; pos &gt;=1 ; pos-=1) // goes aaback to the position
{
myservo.write(pos);
delay(15);

}

Serial.print("servo disengaged");
servo_enabled = 0;
}

}</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>75</wp:post_id>
  <wp:post_date>2013-05-18 23:58:35</wp:post_date>
  <wp:post_date_gmt>2013-05-18 23:58:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>atmega-gertboard-controlled-servo-via-serial-input</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gertboard"><![CDATA[gertboard]]></category>
  <category domain="post_format" nicename="post-format-video"><![CDATA[Video]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="raspberry-pi"><![CDATA[raspberry pi]]></category>
  <category domain="post_tag" nicename="servo"><![CDATA[servo]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"12536933";s:7:"blog_id";s:8:"28403862";s:9:"mod_stamp";s:19:"2013-05-19 15:56:32";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>RaspberryPISpyIntranet</title>
  <link>https://stephenemo.wordpress.com/2013/11/12/raspberrypispyintranet/</link>
  <pubDate>Tue, 12 Nov 2013 20:41:50 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=99</guid>
  <description/>
  <content:encoded><![CDATA[I have put together an application that is provides a web front end to either a USB WebCam or Raspberry PI Cam. The application can be set to random mode and alarm mode. In order to use alarm mode and infra red sensor (PIR) should be connected to GPIO17. If movement is detected an image is taken and an email of the image is sent.

If the application is in random mode, random shots are taken throughout the day, you can define the start time and end time so no shots are taken outside the time, you can also define the frequency. Comments can also be added to the images. The layout of the screen is shown in github

The idea with the random feature is that you get a journal of your photos. These photos can also be emailed out. The logs of detection from the PIR sensor are also displayed on the screen.

This means that as well as using my Raspberry PI as a Youtube player attached to the TV it can also serve as an alarm system and photo journal.
<div><dl><dt><img alt="Screenshot 2013-11-04 23.54.06.gif" src="http://www.raspberrypi.org/phpBB3/download/file.php?id=5113" /></dt><dd><em>About Screenshot</em></dd><dd>Screenshot 2013-11-04 23.54.06.gif (16.72 KiB) Not viewed yet</dd></dl></div>
<div><dl><dt><img alt="Screenshot 2013-11-09 15.17.02.gif" src="http://www.raspberrypi.org/phpBB3/download/file.php?id=5114" /></dt><dd><em>Overview</em></dd><dd>Screenshot 2013-11-09 15.17.02.gif (27.67 KiB) Not viewed yet</dd></dl></div>
The code can be found at <a title="https://github.com/emomonkey/RaspPISpyIntranet" href="https://github.com/emomonkey/RaspPISpyIntranet">https://github.com/emomonkey/RaspPISpyIntranet</a>

In theory you should be able to install by running sudo python setup.py install. However I have not tested the install, it would require a spare Sdcard so I would be interested in feedback from the forum if the install runs.

Also you need to run the shell script gpioexp.sh in order that the pins can be written to

An alternative way to install it is from the github page which is the the long way and involves copying the files to RaspPISpyIntranet and install the python packages individuals.

The application needs to be run as sudo as the pins need supervisor access.

So now the PI in my living room doubles as an email alarm and photo journal in addition to a PC]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>99</wp:post_id>
  <wp:post_date>2013-11-12 20:41:50</wp:post_date>
  <wp:post_date_gmt>2013-11-12 20:41:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>raspberrypispyintranet</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="camera"><![CDATA[Camera]]></category>
  <category domain="post_tag" nicename="flask"><![CDATA[Flask]]></category>
  <category domain="post_tag" nicename="gpio"><![CDATA[GPIO]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="raspberry-pi"><![CDATA[raspberry pi]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>TwitterWhatsUpHome :- Nodejs App listing Twitter Updates and Weather for your Location </title>
  <link>https://stephenemo.wordpress.com/2014/02/18/twitterwhatsuphome-nodejs-app-listing-twitter-updates-and-weather-for-your-location/</link>
  <pubDate>Tue, 18 Feb 2014 00:05:58 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=104</guid>
  <description/>
  <content:encoded><![CDATA[I know have my Raspberry PI hosting a nodejs application at the following location

<span style="line-height:1.5em;">http://80.229.21.163/ </span>

This runs on the Krakenjs suite and runs on a Raspiberry PI with a PiGlow.The PiGlow glows according to the weather [blue is rain and orange is cloudy]

The code is available on  https://github.com/emomonkey/TwitterWhatsUpHome/blob/master/README.md

There is a also a scheduled tweet which you can follow on the hashtag #waringstown

&nbsp;

<a href="http://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-18-00-03-40.png"><img class="alignleft size-medium wp-image-106" alt="Screenshot 2014-02-18 00.03.40" src="http://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-18-00-03-40.png?w=300" width="300" height="161" /></a>

<a href="http://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-17-23-57-58.png"><img class="alignleft size-medium wp-image-105" alt="Screenshot 2014-02-17 23.57.58" src="http://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-17-23-57-58.png?w=300" width="300" height="161" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>104</wp:post_id>
  <wp:post_date>2014-02-18 00:05:58</wp:post_date>
  <wp:post_date_gmt>2014-02-18 00:05:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>twitterwhatsuphome-nodejs-app-listing-twitter-updates-and-weather-for-your-location</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="krakenjs"><![CDATA[Krakenjs]]></category>
  <category domain="post_tag" nicename="piglow"><![CDATA[PiGlow]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="raspberry-pi"><![CDATA[raspberry pi]]></category>
  <category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/LVZybzMVbd]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Screenshot 2014-02-17 23.57.58</title>
  <link>https://stephenemo.wordpress.com/2014/02/18/twitterwhatsuphome-nodejs-app-listing-twitter-updates-and-weather-for-your-location/screenshot-2014-02-17-23-57-58/</link>
  <pubDate>Tue, 18 Feb 2014 00:00:03 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-17-23-57-58.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>105</wp:post_id>
  <wp:post_date>2014-02-18 00:00:03</wp:post_date>
  <wp:post_date_gmt>2014-02-18 00:00:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-2014-02-17-23-57-58</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>104</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-17-23-57-58.png</wp:attachment_url>
</item>
<item>
  <title>Screenshot 2014-02-18 00.03.40</title>
  <link>https://stephenemo.wordpress.com/2014/02/18/twitterwhatsuphome-nodejs-app-listing-twitter-updates-and-weather-for-your-location/screenshot-2014-02-18-00-03-40/</link>
  <pubDate>Tue, 18 Feb 2014 00:04:58 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-18-00-03-40.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>106</wp:post_id>
  <wp:post_date>2014-02-18 00:04:58</wp:post_date>
  <wp:post_date_gmt>2014-02-18 00:04:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-2014-02-18-00-03-40</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>104</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2014/02/screenshot-2014-02-18-00-03-40.png</wp:attachment_url>
</item>
<item>
  <title>New Project</title>
  <link>https://stephenemo.wordpress.com/2014/03/06/new-project/</link>
  <pubDate>Thu, 06 Mar 2014 21:54:29 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=110</guid>
  <description/>
  <content:encoded><![CDATA[<p>I am surprised how stable the Raspberry PI NodeJS server has proven to be. There is a constant stream of tweets being processed and counted on the MongoDB database and the system seems to stay up with little memory issues even though it is up for a week at a time. </p><p>Started moving forward with my next project. A MongoDB Spring data project running off the raspberry pi that stored beer recipes via an AngularJS front end. I also intend to hae it monitor the temperature of the beer and alert me when it is outside that range.</p><p> </p><p>I know<a title="BrewPI" href="http://www.brewpi.com"> brewPI</a> exists but I would something non PHP. The twitter monitoring page is still up and running <a title="Whats up in waringstown" href="http://80.229.21.163/">http://80.229.21.163</a>/</p><p> </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>110</wp:post_id>
  <wp:post_date>2014-03-06 21:54:29</wp:post_date>
  <wp:post_date_gmt>2014-03-06 21:54:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>new-project</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="brewpi"><![CDATA[BrewPI]]></category>
  <category domain="post_tag" nicename="raspberry-pi"><![CDATA[raspberry pi]]></category>
  <category domain="post_tag" nicename="spring"><![CDATA[Spring]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/Dv8iLttPVr]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Spring Boot versus Spring 2.5 annotation versus Pre 2.5</title>
  <link>https://stephenemo.wordpress.com/2014/03/10/spring-boot-versus-spring-2-5-annotation-versus-pre-2-5/</link>
  <pubDate>Mon, 10 Mar 2014 00:33:27 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=116</guid>
  <description/>
  <content:encoded><![CDATA[<p>One of the things I have found with Java is the multitude of frameworks. Working for an Oracle house company my Java exposure is ADF with some Vaadin work on the side. Now with half the world using Spring I have started work on a Rest Back End for my angular app. So it has been fun trying Spring Boot, Spring 2.5 with annotation and Pre Spring 2.5 and noticing how much work is being done to make Spring as easy to use as NodeJS, ASP and Ruby I guess. Spring 2.5 with annotations seems the best bet, Spring Boot makes way too many decisions for you so you don't understand the code you get. At least Spring annotation gets rid of alot of the nightmares encountered with the XML maze of early Java frameworks such as JDeveloper 10....</p><p> </p><p> </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>116</wp:post_id>
  <wp:post_date>2014-03-10 00:33:27</wp:post_date>
  <wp:post_date_gmt>2014-03-10 00:33:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>spring-boot-versus-spring-2-5-annotation-versus-pre-2-5</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="java-spring"><![CDATA[Java Spring]]></category>
  <category domain="post_tag" nicename="raspberry-pi"><![CDATA[raspberry pi]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/yhOdJ7CnH9]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Most talked about #tag</title>
  <link>https://stephenemo.wordpress.com/2014/04/24/most-talked-about-tag/</link>
  <pubDate>Thu, 24 Apr 2014 22:59:09 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=126</guid>
  <description/>
  <content:encoded><![CDATA[<p><a href="http://tinyurl.com/kbdpmeb" title="Most talked about #tag">Most talked about #tag</a></p><p>And the most tagged about #tag in Craigavon is</p><ul><li>#KCA </li></ul><p>Which I believe is Nickolodean channel followed by #IrelandWant5SOS and something to do with a Pop group called Little Mix.</p><p>What are people talking about..EastEnders...who did away with Lucy</p><p> </p><p> </p><p> </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>126</wp:post_id>
  <wp:post_date>2014-04-24 22:59:09</wp:post_date>
  <wp:post_date_gmt>2014-04-24 22:59:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>most-talked-about-tag</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/IHpng6gg02]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Tracking Property in Northern Ireland (Ruby on Rails)</title>
  <link>https://stephenemo.wordpress.com/2015/01/11/tracking-property-in-northern-ireland-ruby-on-rails/</link>
  <pubDate>Sun, 11 Jan 2015 23:47:50 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=135</guid>
  <description/>
  <content:encoded><![CDATA[I have put together a Property Tracking Web Site which can be accessed at <a title="http://www.propertytrackerni.co.uk/" href="http://www.propertytrackerni.co.uk/">http://www.propertytrackerni.co.uk/</a>. This web site scrape data from property sites in Northern Ireland and tracks changes in the prices and volumes of properties in all the area in northern ireland.

<a href="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-25-50.png"><img class="alignleft size-medium wp-image-136" src="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-25-50.png?w=300" alt="Screenshot 2015-01-11 23.25.50" width="300" height="169" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

Depending on clicking on the volume or pricing you can navigate through a ranked listing based on the county you select and see a visual representation of the property volume and price movements of the area you select

<a href="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-32-49.png"><img class="alignleft size-medium wp-image-137" src="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-32-49.png?w=300" alt="Screenshot 2015-01-11 23.32.49" width="300" height="169" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

The Ranked Table is displayed below.  Bourbon/Neat was used as a framework for the layout, it is less heavy than bootstrap and allows for the website to have at least a base level of responsive design

<a href="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-11.png"><img class="alignleft size-medium wp-image-138" src="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-11.png?w=300" alt="Screenshot 2015-01-11 23.34.11" width="300" height="169" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

The final graph for the selected area is shown below. These graphs use the highchart framework

<a href="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-35.png"><img class="alignleft size-medium wp-image-139" src="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-35.png?w=300" alt="Screenshot 2015-01-11 23.34.35" width="300" height="169" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

If a user logs in they can subscribe to a number of areas and will receive emailed version of the graphs on a montly basis. The web site has been built on Ruby on Rails 4 with a Postgres back end. The Gems and Technologies used include
<ul>
	<li>Devise</li>
	<li>Sidekiq</li>
	<li>Postgres</li>
	<li>HighChart</li>
	<li>Whenever</li>
	<li>RSpec</li>
	<li>Neat/Bourbon</li>
	<li>Redis</li>
	<li>PhantomJS</li>
	<li>Nokogiri/Mechanize</li>
</ul>
The code is OpenSource and can be viewed at  <a title="https://github.com/emomonkey/PropertyTrackerNI" href="https://github.com/emomonkey/PropertyTrackerNI">https://github.com/emomonkey/PropertyTrackerNI</a>. I have been impressed with Postgres as it matchs Oracle on a feature by feature basis. Windows Functions in place of Analytical Functions and Materialised Views, the only exception is no way of organising code into Packages. ActiveRecord was used alot in the Web Scraping Logic

I intend to take more about specific areas of the application in further posts

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>135</wp:post_id>
  <wp:post_date>2015-01-11 23:47:50</wp:post_date>
  <wp:post_date_gmt>2015-01-11 23:47:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tracking-property-in-northern-ireland-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="belfast"><![CDATA[Belfast]]></category>
  <category domain="post_tag" nicename="northern-ireland"><![CDATA[Northern Ireland]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="property"><![CDATA[Property]]></category>
  <category domain="post_tag" nicename="residents"><![CDATA[Residents]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[12536933]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/2A2bkGS8x6]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Screenshot 2015-01-11 23.25.50</title>
  <link>https://stephenemo.wordpress.com/2015/01/11/tracking-property-in-northern-ireland-ruby-on-rails/screenshot-2015-01-11-23-25-50/</link>
  <pubDate>Sun, 11 Jan 2015 23:27:23 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-25-50.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>136</wp:post_id>
  <wp:post_date>2015-01-11 23:27:23</wp:post_date>
  <wp:post_date_gmt>2015-01-11 23:27:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-2015-01-11-23-25-50</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>135</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-25-50.png</wp:attachment_url>
</item>
<item>
  <title>Screenshot 2015-01-11 23.32.49</title>
  <link>https://stephenemo.wordpress.com/2015/01/11/tracking-property-in-northern-ireland-ruby-on-rails/screenshot-2015-01-11-23-32-49/</link>
  <pubDate>Sun, 11 Jan 2015 23:33:32 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-32-49.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>137</wp:post_id>
  <wp:post_date>2015-01-11 23:33:32</wp:post_date>
  <wp:post_date_gmt>2015-01-11 23:33:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-2015-01-11-23-32-49</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>135</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-32-49.png</wp:attachment_url>
</item>
<item>
  <title>Screenshot 2015-01-11 23.34.11</title>
  <link>https://stephenemo.wordpress.com/2015/01/11/tracking-property-in-northern-ireland-ruby-on-rails/screenshot-2015-01-11-23-34-11/</link>
  <pubDate>Sun, 11 Jan 2015 23:35:10 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>138</wp:post_id>
  <wp:post_date>2015-01-11 23:35:10</wp:post_date>
  <wp:post_date_gmt>2015-01-11 23:35:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-2015-01-11-23-34-11</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>135</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-11.png</wp:attachment_url>
</item>
<item>
  <title>Screenshot 2015-01-11 23.34.35</title>
  <link>https://stephenemo.wordpress.com/2015/01/11/tracking-property-in-northern-ireland-ruby-on-rails/screenshot-2015-01-11-23-34-35/</link>
  <pubDate>Sun, 11 Jan 2015 23:38:22 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-35.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>139</wp:post_id>
  <wp:post_date>2015-01-11 23:38:22</wp:post_date>
  <wp:post_date_gmt>2015-01-11 23:38:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-2015-01-11-23-34-35</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>135</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-34-35.png</wp:attachment_url>
</item>
<item>
  <title>Should Rails Developers be Database Developers</title>
  <link>https://stephenemo.wordpress.com/2015/01/13/should-rails-developers-be-database-developers/</link>
  <pubDate>Tue, 13 Jan 2015 23:23:56 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.wordpress.com/?p=141</guid>
  <description/>
  <content:encoded><![CDATA[One of the things that I noticed in most of the getting start with Rails books that they seemed determined in teaching you how to work with the database purely through ActiveRecord. ActiveRecord contains alot of analytical functions such as sum or count though these are very limiting compared to what you can in pure SQL especially with a database as powerful as Postgres which contains many of the features of Oracle from windows functions (analytical functions in Oracle) and materialised views.

Take a look at the following piece of SQL
<blockquote>SELECT cntyvol.COUNTY, cntyvol.YEAR, cntyvol.MONTH, cntyvol.VOLPC, cntyvol.created_at,soldvol.prcsold, prcchg.MONTH_PRICE_DIFF, row_number() OVER () id
FROM
(SELECT vcnty.county, vcnty.year, vcnty.month, ROUND((vcnty.volsum / tvol.volsum) * 100,2) VOLPC, created_at
FROM
(SELECT
COUNTY,
YEAR,
MONTH,
historic_analyses.created_at,
ROUND(SUM(resultvalue), 2) volsum
FROM historic_analyses, search_params sp, search_types st
WHERE search_types_id = st.id AND search_params_id = sp.id
AND st.searchtext = 'Volume Summary Property Types'
GROUP BY COUNTY, YEAR, MONTH, historic_analyses.created_at
) vcnty,
(SELECT
YEAR,
MONTH,
ROUND(SUM(resultvalue), 2) volsum
FROM historic_analyses, search_params sp, search_types st
WHERE search_types_id = st.id AND search_params_id = sp.id
AND st.searchtext = 'Volume Summary Property Types'
GROUP BY YEAR, MONTH
) tvol
WHERE tvol.year = vcnty.year
AND vcnty.month = tvol.month) cntyvol,
(SELECT volv.county, volv.year, volv.month, ROUND( (soldval /volsum * 100) ,2) prcsold
FROM
(
SELECT
COUNTY,
YEAR,
MONTH,
ROUND(SUM(resultvalue), 2) volsum
FROM historic_analyses, search_params sp, search_types st
WHERE search_types_id = st.id AND search_params_id = sp.id
AND st.searchtext = 'Volume Summary Property Types'
GROUP BY COUNTY, YEAR, MONTH
) volv LEFT JOIN
(
SELECT
COUNTY,
YEAR,
MONTH,
ROUND(SUM(resultvalue), 2) soldval
FROM historic_analyses, search_params sp, search_types st
WHERE search_types_id = st.id AND search_params_id = sp.id
AND st.searchtext = 'Sold Summary Prop Type'
GROUP BY COUNTY, YEAR, MONTH
ORDER BY COUNTY, YEAR, MONTH DESC
) soldv ON soldv.county = volv.county AND soldv.year = volv.year AND soldv.month = volv.month
) soldvol,
(
SELECT COUNTY, YEAR, MONTH,MONTH_PRICE_DIFF
FROM (
SELECT
COUNTY,
YEAR,
MONTH,
coalesce(round((AVERAGEVAL - LAG(AVERAGEVAL, 1)
OVER (PARTITION BY county
ORDER BY year, month)), 2), 0) MONTH_PRICE_DIFF,
valtime
FROM (
SELECT
COUNTY,
YEAR,
MONTH,
ROUND(AVG(resultvalue), 2) AVERAGEVAL,
MAX(year || trim(to_char(month, '09')))
OVER (PARTITION BY county) valtime
FROM historic_analyses, search_params sp
WHERE search_types_id = 5 AND search_params_id = sp.id
GROUP BY COUNTY, YEAR, MONTH
ORDER BY COUNTY, YEAR, MONTH DESC
) a
) perc
WHERE valtime = year|| trim(to_char(month,'09'))
) prcchg
WHERE soldvol.county = cntyvol.county AND soldvol.year = cntyvol.year
AND soldvol.month = cntyvol.month AND prcchg.county = cntyvol.county AND prcchg.month = cntyvol.month
AND prcchg.year = cntyvol.year)</blockquote>
Developing this in ActiveRecord would have been very time consuming and involved alot of lines of code considering ActiveRecord's sum function only operates on one group by at a time, ActiveRecord did prove it's worth when used as part of the web scraping code where database interaction is limited to inserts and updates as shown below
<blockquote>propertysite <span class="pl-k">=</span> <span class="pl-s3">PropertySite</span>.create(<span class="pl-c1">:title</span> =&gt; spage[<span class="pl-s1"><span class="pl-pds">"</span>itmtitle<span class="pl-pds">"</span></span>], <span class="pl-c1">:propertytype</span> =&gt; spage[<span class="pl-s1"><span class="pl-pds">"</span>type<span class="pl-pds">"</span></span>], <span class="pl-c1">:beds</span> =&gt; sbeds.to_i, <span class="pl-c1">:searchtext</span> =&gt; <span class="pl-vo">@searchinput</span>, <span class="pl-c1">:status</span> =&gt; spage[<span class="pl-s1"><span class="pl-pds">"</span>status<span class="pl-pds">"</span></span>], <span class="pl-c1">:lastdatescanned</span> =&gt; <span class="pl-s3">DateTime</span>.now )</blockquote>
Ruby on Rails applications are scaffolded and run as part of SQlite and all the tutorials focus on ActiveRecord which can lead developers down the wrong path by ignoring the powerful syntax they have available with SQL. Creating Database Independent code is not a good idea as the chances of your system moving from SQLlite to Postgres to MySQL over it's lifetime as slim,

It would be better if some of the books or Rails Blogs focused on Database Development as well as focusing 100 Percent on ActiveRecord.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>141</wp:post_id>
  <wp:post_date>2015-01-13 23:23:56</wp:post_date>
  <wp:post_date_gmt>2015-01-13 23:23:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>should-rails-developers-be-database-developers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="activerecord"><![CDATA[ActiveREcord]]></category>
  <category domain="post_tag" nicename="database-development"><![CDATA[Database Development]]></category>
  <category domain="post_tag" nicename="northern-ireland"><![CDATA[Northern Ireland]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/PzMPmAJbXw]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Developing a Web Scraping Class in Ruby</title>
  <link>https://stephenemo.wordpress.com/2015/01/15/developing-a-web-scraping-class-in-ruby/</link>
  <pubDate>Thu, 15 Jan 2015 23:16:46 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=143</guid>
  <description/>
  <content:encoded><![CDATA[As part of my website <a href="http://www.propertytrackerni.co.uk">www.propertytrackerni.co.uk</a> I needed to put together a web scraper application. Some of the information was available through the government web site but not in an automated way and also it contained less detail than the information that was freely available on property sites on the web. Also when you develop your own code you are not limited to working within the limits of a ready made Dataset. As I had chosen Ruby on Rails 4 as my platform I was left with the below choices for my web scraping needs
<ul>
	<li>Nokogiri Gem</li>
	<li>Mechanize Gem</li>
</ul>
Mechanize uses Nokogiri but it is at a much higher level than Nokogiri so for example if you need to edit a checkbox with a description you simply enter the method checkbox_with with the name as a method. There are methods specifically for interacting with a form, filling in fields, pressing command buttons or highlighting checkboxes. If you have used Selenium for your automated tests then you will feel very familiar with the syntax and code that you put together here

Next tool that you require is
<ul>
	<li>Chrome</li>
</ul>
If you are going to pull data of a web site you need to know how the css is structured on the web site you are going to pull data from.  There are at least two methods for pulling data of the website, xpath syntax and the standard css commands. I found xpath was best for pulling the overall element you want of the web site, for example the search results and the next method was to use the css itself to pull of the standard elements. The xpath command will give you an array of element you can iterate through.

For example the xpath "//div[contains(@class,'<span class="pl-pse">#{</span><span class="pl-s2">parse_string</span><span class="pl-pse"><span class="pl-s2">}</span></span>')]" will give you the contents of the with the div statement belonging to the class whose name is the value of parse_string. So in other word if the parse_string is search_results it will be the contents of the div statement of class search_results.

This will give you an array of elements which you can then iterate through and parse. Now rather than use xpath you can access the css directly so say for example the header contains the name you require you can enter the below command

.css(<span class="pl-s1"><span class="pl-pds">"</span>h2<span class="pl-pds">"</span></span>)[<span class="pl-c1">0</span>].content

If the contents you want is instead a class you can use the syntax .classname as shown below

.css(<span class="pl-s1"><span class="pl-pds">"</span>.beds<span class="pl-pds">"</span></span>)[<span class="pl-c1">0</span>].content

This information can then be insert into the database via ActiveRecord. The web scraping element of this project was alot more easier than I thought with the code coming together in much the same way that an automated test set would come together.

The code for this is available on

<a href="https://github.com/emomonkey/PropertyTrackerNI/blob/master/app/models/property_news_crawler.rb">https://github.com/emomonkey/PropertyTrackerNI/blob/master/app/models/property_news_crawler.rb</a>

and

<a href="https://github.com/emomonkey/PropertyTrackerNI/blob/master/app/models/concerns/crawler_module.rb">https://github.com/emomonkey/PropertyTrackerNI/blob/master/app/models/concerns/crawler_module.rb</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>143</wp:post_id>
  <wp:post_date>2015-01-15 23:16:46</wp:post_date>
  <wp:post_date_gmt>2015-01-15 23:16:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>developing-a-web-scraping-class-in-ruby</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="belfast"><![CDATA[Belfast]]></category>
  <category domain="post_tag" nicename="property"><![CDATA[Property]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="web-scraping"><![CDATA[Web Scraping]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/3DoSFuODHm]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using Whenever GEM to overcome Postgres limitations</title>
  <link>https://stephenemo.wordpress.com/2015/01/20/using-whenever-gem-to-overcome-postgres-limitations/</link>
  <pubDate>Tue, 20 Jan 2015 23:07:42 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=146</guid>
  <description/>
  <content:encoded><![CDATA[One of the limitations I found with Postgres compared with Oracle is the lack of a scheduled request. To get round this limitation I used the whenever gem <a href="https://github.com/javan/whenever">https://github.com/javan/whenever</a>. This routine gives you the ability to rub a Sidekiq worker as a cron job. One gotcha that you need to watch out for is Sidekiq creates multiple workers which can mean you get multiple instances of the same function carried out at the same time. This means you can end out with duplicate entries if this does not break your database constraints.

To limit this you can can specify the queue and the number of workers that can be created for your class. See example sidekiq.yml below
<blockquote>:verbose: false
:pidfile: ./tmp/pids/sidekiq.pid
:logfile: ./log/sidekiq.log
:concurrency: 25
:queues:
- default
- queue_analysis
- queue_scraper
:limits:
queue_analysis: 1
queue_scraper: 15</blockquote>
This means that something like a web scraping class can have multiple instances while the db class will just have one instance spawned.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>146</wp:post_id>
  <wp:post_date>2015-01-20 23:07:42</wp:post_date>
  <wp:post_date_gmt>2015-01-20 23:07:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-whenever-gem-to-overcome-postgres-limitations</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="oracle"><![CDATA[oracle]]></category>
  <category domain="post_tag" nicename="postgres"><![CDATA[postgres]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/w9YJhwLDSf]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Improvements that could be made to my Northern Ireland Property Tracking Website</title>
  <link>https://stephenemo.wordpress.com/2015/01/26/improvements-that-could-be-made-to-my-northern-ireland-property-tracking-website/</link>
  <pubDate>Mon, 26 Jan 2015 00:44:44 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=148</guid>
  <description/>
  <content:encoded><![CDATA[Having taken a look at my Property Tracking Web Site for  Northern Ireland<a href="http://www.propertytrackerni.co.uk"> http://www.propertytrackerni.co.uk</a> over several months I have noticed that the lack of weightings does through up some distracting results. For example Lissan has become one the areas with the highest average prices simply due to the fact it has one property that is over 500,000 in value and this property happens to be a site.

<a href="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-25-50.png"><img class="alignnone  wp-image-136" src="https://stephenemo.files.wordpress.com/2015/01/screenshot-2015-01-11-23-25-50.png?w=300" alt="Screenshot 2015-01-11 23.25.50" width="669" height="388" /></a>

Now I do categorize properties as detached, sem- detached, sites etc so I could pull sites out but that would defeat the purpose. It does illustrate that weightings are pretty essential when carrying out this sort of analysis.

One thing that I am happy with is the use of<a href="http://refills.bourbon.io/"> http://refills.bourbon.io/</a> as the display technology. Using this I have immediately could a website that looks professional and can be used to automatically generate templates for the pages within the application. It is alot more lightweight than Bootstrap and having viewed my website on my mobile seems to give a basic level of responsive design to the site straight out of the box. I am somewhat surprised that Bootstrap seems to be used to such a large extent when you get so much for free using Bourbon Refills. It reminds me a little bit of the automatic screens in Oracle Apex<a href="https://apex.oracle.com/i/"> https://apex.oracle.com/i/</a> only you are not limited to the Oracle concept of using Pl/SQL everywhere. In ThoughtBot's Bourbon you also have lot of controls that have an iOS feel as well.

So in terms of the look of the site I am pretty happy. In terms of maintaining this site, well I have found web scraping apps will always require some work. My source site made some changes to their site in December and this resulted in some changes needing to be made to my interface code. This is something that could not be improved unless I abandoned the idea of pulling data from another site and used a public domain dataset.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>148</wp:post_id>
  <wp:post_date>2015-01-26 00:44:44</wp:post_date>
  <wp:post_date_gmt>2015-01-26 00:44:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>improvements-that-could-be-made-to-my-northern-ireland-property-tracking-website</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="improvements"><![CDATA[Improvements]]></category>
  <category domain="post_tag" nicename="northern-ireland"><![CDATA[Northern Ireland]]></category>
  <category domain="post_tag" nicename="oracle-apex"><![CDATA[oracle apex]]></category>
  <category domain="post_tag" nicename="ruby-in-rails"><![CDATA[ruby in rails]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/QAA9OaZcGv]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Effective Use of Concurrent Sidekiq Workers</title>
  <link>https://stephenemo.wordpress.com/2015/02/11/effective-use-of-concurrent-sidekiq-workers/</link>
  <pubDate>Wed, 11 Feb 2015 22:17:41 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=152</guid>
  <description/>
  <content:encoded><![CDATA[One of the benefits of Sidekiq is that it allows your application to work on a single task using simultaneous worker processes which also  means that you have a set of additional problems
<ul>
	<li>Ensure separate workers do not save the same record result at the same causing data duplication</li>
	<li>Ensure separate workers do not work on the same data</li>
</ul>
Sidekiq has proved useful on my web scraping code for my Northern Ireland Property Web Site at <a href="http://www.propertytrackerni.co.uk/">http://www.propertytrackerni.co.uk</a>

Obviously neither of these issues is something that you would want to happen in your working application and the issue if data duplication can be easily resolved by adding unique database constraints so that the same data cannot be added to your database table.

The second issue can be resolved by marking off data that has been processed already which I have achieved by adding the below line to the code
<blockquote>  if pdate == nil or (pdate.year &lt;= Time.now.year and pdate.mon != Time.now.month)</blockquote>
This pdate contains the date the search area record was last processed and as this task is monthly this means search areas that have already been processed will be passed over. Now this does mean that later workers will have to iterate over search params that have already been processed but as the number of search areas can be measured in the thousands (Northern Ireland is quote small) this is not much overhead. The WHERE ActiveRecord statement could be used on top of the top condition e.g.
<blockquote>SearchParams.where(“searchdate is null or (EXTRACT(YEAR FROM searchdate) &lt;= EXTRACT(YEAR FROM now()) AND EXTRACT(MONTH FROM searchdate) &lt;= EXTRACT(MONTH FROM now()))find_each(start:isize, batch_size: batchsize)</blockquote>
However as find_each retrieves data in batches it is possible another worker could have retrieved one of your batches and it is now processed so the if condition is needed as well as the database constraint. The database constraint is needed as it is possible that the more than one worker could have grabbed the row before a database update has been done.
<blockquote>I would be interested in hearing about better methods that could be done to achieve this using SideKiq and Ruby. For example can I specify the number of workers dynamically and then calculate how the records to be processed are split among the workers. This does not seem the case in sidekiq.yml. I know I can specify the maximum number of workers but that is it

:verbose: false
:pidfile: ./tmp/pids/sidekiq.pid
:logfile: ./log/sidekiq.log
:concurrency: 25
:queues:
- default
- queue_analysis
- queue_scraper
:limits:
queue_analysis: 1
queue_scraper: 15</blockquote>
The code is below
<blockquote>class ParseResultsWorker

include Sidekiq::Worker

sidekiq_options :queue =&gt; :queue_scraper

def perform(*args)
isize = 1
batchsize = 10000
stime = Time.now
vst = stime.strftime("%H:%M:%S");
tstat = Transstatus.find_by name: 'ParseResultsWorker', created_at: Time.now.utc.to_date
if tstat.nil?
tstat = Transstatus.create(:name =&gt; "ParseResultsWorker" )
end
Rails.logger.debug ' ParseResultsWorker start job ' + vst
SearchParams.find_each(start:isize, batch_size: batchsize) do |params|
pdate = params['searchdate']
if pdate == nil or (pdate.year &lt;= Time.now.year and pdate.mon != Time.now.month)
tstat.update(currentparam: params.searchparam)
@pnewscrawl = PropertyNewsCrawler.new('http://www.propertynews.com', params.searchparam)
@pnewscrawl.findresult
end
end
etime = Time.now
vet = etime.strftime("%H:%M:%S");
PropertySite.lastscanned
Rails.logger.debug ' ParseResultsWorker end job ' + vet
rescue StandardError =&gt; e
Rails.logger.debug 'Error running ParseResultsWorker.perform ' + e.message
return false;
end
end</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>152</wp:post_id>
  <wp:post_date>2015-02-11 22:17:41</wp:post_date>
  <wp:post_date_gmt>2015-02-11 22:17:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>effective-use-of-concurrent-sidekiq-workers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="belfast"><![CDATA[Belfast]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="property"><![CDATA[Property]]></category>
  <category domain="post_tag" nicename="real-estate"><![CDATA[Real Estate]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/wH4ZSbtzsT]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using Highcharts in  Ruby on Rails in Headless Mode</title>
  <link>https://stephenemo.wordpress.com/2015/02/19/using-highcharts-in-ruby-on-rails-in-headless-mode/</link>
  <pubDate>Thu, 19 Feb 2015 00:29:24 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=154</guid>
  <description/>
  <content:encoded><![CDATA[Using Highcharts is straightforward enough using the ruby on rails gem as you can see on my web site <a href="http://www.propertytrackerni.co.uk">http://www.propertytrackerni.co.uk</a> thanks to the gem lazy_high_charts. However what do we need to do is to use these graphing tool in a scheduled email ?

The answer is that we need a scheduled job to call this browser based javascript graphing tool from the command line and we need this scheduled routine to first export the graphing info out to json.

To export this data in json take a look at the below code
<blockquote>volcnty = @graphservice.fndavgprcmthyr
cats = {:categories =&gt; volcnty.category}
icnt = 0
vdata = Array.new
volcnty.series.each do |volitm|
vdata &lt;&lt; Hash(:name =&gt; volcnty.arrseries[icnt], :data =&gt; volitm)
icnt+=1
end
types = {:type =&gt; "line"}
yax = {:title =&gt; {:text =&gt; "Average Asking Price"}}
graphdat = {:chart =&gt; types,:title =&gt; "Average Asking Price over the year",:xAxis =&gt; cats,:yAxis =&gt; yax, :series =&gt; vdata}
File.open("#{Rails.root}/highchart/exporting-server/phantomjs/#{@currtrans.id}__avgyr.json", "w") { |f| f.write(graphdat.to_json) }</blockquote>
The routine @graphservice.fndavgprcmthyr calls our postgres view and returns the result as an object which contains the results of our query, To write the data in a format highchart will understand we need to use the json put in the below format
<blockquote>graphdat = {:chart =&gt; types,:title =&gt; "Average Asking Price over the year",:xAxis =&gt; cats,:yAxis =&gt; yax, :series =&gt; vdata}</blockquote>
A shell script needs to be called to call highcharts and convery the json into a png which can be loaded into our email
<blockquote>system(<span class="pl-s1"><span class="pl-pds">"</span>sh <span class="pl-pse">#{</span><span class="pl-s2"><span class="pl-s3">Rails</span>.root</span><span class="pl-pse"><span class="pl-s2">}</span></span>/highchart/exporting-server/phantomjs/phantomjs.sh <span class="pl-pse">#{</span><span class="pl-s2"><span class="pl-s3">Rails</span>.root</span><span class="pl-pse"><span class="pl-s2">}</span></span> <span class="pl-pse">#{</span><span class="pl-s2"><span class="pl-vo">@currtrans</span>.id</span><span class="pl-pse"><span class="pl-s2">}</span></span>__volyr_<span class="pl-pse">#{</span><span class="pl-s2">searchp.id</span><span class="pl-pse"><span class="pl-s2">}</span></span>.json volyr_<span class="pl-pse">#{</span><span class="pl-s2">searchp.id</span><span class="pl-pse"><span class="pl-s2">}</span></span>_<span class="pl-pse">#{</span><span class="pl-s2"><span class="pl-vo">@currtrans</span>.id</span><span class="pl-pse"><span class="pl-s2">}</span></span>.png<span class="pl-pds">"</span></span>)</blockquote>
This shell script contains the below code
<blockquote>cd $1/highchart/exporting-server/phantomjs
phantomjs highcharts-convert.js -infile $2 -outfile $1/public/export/$3 -scale 2.5 -width 300 -constr Chart</blockquote>
The highcharts-convert.js and the associated files can be found on the highcharts web site]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>154</wp:post_id>
  <wp:post_date>2015-02-19 00:29:24</wp:post_date>
  <wp:post_date_gmt>2015-02-19 00:29:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-highcharts-in-ruby-on-rails-in-headless-mode</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="highcharts"><![CDATA[Highcharts]]></category>
  <category domain="post_tag" nicename="northern-ireland"><![CDATA[Northern Ireland]]></category>
  <category domain="category" nicename="programming"><![CDATA[programming]]></category>
  <category domain="post_tag" nicename="property"><![CDATA[Property]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <category domain="post_tag" nicename="www-propertytrackerni-co-uk"><![CDATA[www.propertytrackerni.co.uk]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/UOFHWPN2s8]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>High Charts Interactive Grids</title>
  <link>https://stephenemo.wordpress.com/2015/03/03/high-charts-interactive-grids/</link>
  <pubDate>Tue, 03 Mar 2015 22:01:49 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">https://stephenemo.wordpress.com/?p=156</guid>
  <description/>
  <content:encoded><![CDATA[Now that my web site has been live for a couple of months I have had time to go back and see some improvements I can make. The first thing I noticed was regarding the Highchart graphs, I noticed that you could filter out the lines of the graph that you where not interested in by clicking on the related legend. So I updated the graph so that clicking on it does not move you to a new page which meant this useful dynamic legend filter functionality could be used. You can still move pages by clicking on the left hand side grid boxes

[caption id="attachment_157" align="alignnone" width="300"]<a href="https://stephenemo.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png"><img class="size-medium wp-image-157" src="https://stephenemo.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png?w=300" alt="Interact with the High Charts Graphs" width="300" height="157" /></a> Interact with the High Charts Graphs[/caption]

The second thing I noticed was that smaller towns ended up with the highest price. This was due to the low volumes of sales in the area. This meant a single site valued at 600,000 pounds would give high average price as it was the only one available. I do need some sorted of weighted average. Any suggestions would be welcome.

Check out <a href="http://www.propertytrackerni.co.uk">http://www.propertytrackerni.co.uk</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>156</wp:post_id>
  <wp:post_date>2015-03-03 22:01:49</wp:post_date>
  <wp:post_date_gmt>2015-03-03 22:01:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>high-charts-interactive-grids</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="highcharts"><![CDATA[Highcharts]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on rails]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="weighted-average"><![CDATA[weighted average]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[stephenemo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/HScXosy7px]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5415324</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:36781241;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>133</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>72.201.170.118</wp:comment_author_IP>
    <wp:comment_date>2015-03-05 05:14:58</wp:comment_date>
    <wp:comment_date_gmt>2015-03-05 05:14:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://bob-roberts.net/2015/03/04/high-charts-interactive-grids/" rel="nofollow">bob-roberts.net</a> and commented: 
We use High Charts as well.  Excellent tool imho]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1425583773</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1425583773</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425537241.8183829784393310546875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425583773.92292690277099609375;s:7:"message";s:53:"emospacemonkey changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"emospacemonkey";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425532498.786140918731689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>comment_like_count</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Screenshot from 2015-03-03 21:48:17</title>
  <link>https://stephenemo.wordpress.com/2015/03/03/high-charts-interactive-grids/screenshot-from-2015-03-03-214817/</link>
  <pubDate>Tue, 03 Mar 2015 21:49:30 +0000</pubDate>
  <dc:creator>emospacemonkey</dc:creator>
  <guid isPermaLink="false">http://stephenemo.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Interact with the High Charts Graphs]]></excerpt:encoded>
  <wp:post_id>157</wp:post_id>
  <wp:post_date>2015-03-03 21:49:30</wp:post_date>
  <wp:post_date_gmt>2015-03-03 21:49:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-from-2015-03-03-214817</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>156</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://stephenemo.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png</wp:attachment_url>
</item>
  </channel>
</rss>
